openapi: 3.1.0
info:
  title: Zoom API
  description: API Description
  contact:
    name: Zoom Developers
    url: https://developer.zoom.us/
    email: developer@zoom.us
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
  x-apisguru-categories:
  - telecom
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_zoom_us_profile_image.jpeg
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/zoom/api/master/openapi.v2.json
    version: "2.0"
  x-preferred: true
  x-providerName: zoom.us
externalDocs:
  description: Zoom API Documentation
  url: https://zoom.github.io/api
servers:
- url: https://api.zoom.us/v2
security:
- global: []
tags:
- name: Accounts
  description: Account operations
- name: Billing
  description: Billing operations
- name: Users
  description: User operations
- name: Meetings
  description: Meeting operations
- name: Webinars
  description: Webinar operations
- name: Groups
  description: Group operations
- name: IM Groups
  description: IM Group operations
- name: IM Chat
  description: IM Chat operations
- name: Cloud Recording
  description: Cloud Recording operations
- name: Reports
  description: Report operations
- name: Dashboards
  description: Dashboard operations
- name: Webhooks
  description: Webhook operations
- name: TSP
  description: TSP operations
- name: PAC
  description: PAC operations
- name: Devices
  description: H323 Device operations
- name: TrackingField
  description: Tracking Field operations
paths:
  /accounts:
    get:
      tags:
      - Accounts
      summary: List sub accounts
      description: List all the sub accounts under the master account
      operationId: accounts
      parameters:
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Account list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountList'
    post:
      tags:
      - Accounts
      summary: Create a sub account
      description: Create a sub account under the master account. <aside>Your account
        must be a master account and have this privilege to create sub account. Zoom
        only assigns this privilege to trusted partners. The created user will not
        receive a confirmation email.</aside>.
      operationId: accountCreate
      requestBody:
        description: Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "201":
          description: Account Created
          headers:
            Content-Location:
              description: Location of created Account
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_at:
                    type: string
                    description: Account created date time
                  id:
                    type: string
                    description: Account ID
                  owner_email:
                    type: string
                    description: Account owner email
                  owner_id:
                    type: string
                    description: Account Owner ID
            application/xml:
              schema:
                type: object
                properties:
                  created_at:
                    type: string
                    description: Account created date time
                  id:
                    type: string
                    description: Account ID
                  owner_email:
                    type: string
                    description: Account owner email
                  owner_id:
                    type: string
                    description: Account Owner ID
        "409":
          description: Account with that email already exists
          content: {}
      x-codegen-request-body-name: body
  /accounts/{accountId}:
    get:
      tags:
      - Accounts
      summary: Retrieve a sub account
      description: Retrieve a sub account under the master account. <aside>Your account
        must be a master account and have this privilege to read sub accounts. Zoom
        only assigns this privilege to trusted partners</aside>.
      operationId: account
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Account object returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_at:
                    type: string
                    description: Account creation date/time
                    format: date-time
                  id:
                    type: string
                    description: Account ID
                  options:
                    $ref: '#/components/schemas/AccountOptions'
                  owner_email:
                    type: string
                    description: Account Owner email
                  owner_id:
                    type: string
                    description: Account Owner ID
                  vanity_url:
                    type: string
                    description: Account Vanity URL
            application/xml:
              schema:
                type: object
                properties:
                  created_at:
                    type: string
                    description: Account creation date/time
                    format: date-time
                  id:
                    type: string
                    description: Account ID
                  options:
                    $ref: '#/components/schemas/AccountOptions'
                  owner_email:
                    type: string
                    description: Account Owner email
                  owner_id:
                    type: string
                    description: Account Owner ID
                  vanity_url:
                    type: string
                    description: Account Vanity URL
        "404":
          description: User not found
          content: {}
    delete:
      tags:
      - Accounts
      summary: Disassociate an account
      description: Disassociate a sub account from the master account. This will leave
        the account intact but the sub account will not longer be associated with
        the master account.
      operationId: accountDisassociate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Account deleted
          content: {}
        "404":
          description: Account not found
          content: {}
  /accounts/{accountId}/billing:
    get:
      tags:
      - Billing
      summary: Retrieve billing information for a sub account
      description: Retrieve billing information for a sub account under the master
        account
      operationId: accountBilling
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Account billing contact information returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingContactRequired'
            application/xml:
              schema:
                $ref: '#/components/schemas/BillingContactRequired'
        "404":
          description: Account not found
          content: {}
    patch:
      tags:
      - Billing
      summary: Update billing information for a sub account
      description: Update billing information for a sub account under the master account
        <aside>Only for the sub account which is a paid account and paid by master
        account</aside>
      operationId: accountBillingUpdate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BillingContact'
        required: true
      responses:
        "204":
          description: Account billing contact information updated
          content: {}
        "404":
          description: Account not found
          content: {}
      x-codegen-request-body-name: body
  /accounts/{accountId}/managed_domains:
    get:
      tags:
      - Accounts
      summary: Retrieve a sub account's managed domains
      description: Retrieve a sub account's managed domains under the master account
      operationId: accountManagedDomain
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Account managed domains returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DomainsList'
        "404":
          description: Account not found
          content: {}
  /accounts/{accountId}/options:
    patch:
      tags:
      - Accounts
      summary: Update a sub account's options
      description: Update a sub account's options under the master account
      operationId: accountOptionsUpdate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountOptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountOptions'
        required: true
      responses:
        "204":
          description: Account options updated
          content: {}
        "404":
          description: Account not found
          content: {}
      x-codegen-request-body-name: body
  /accounts/{accountId}/plans:
    get:
      tags:
      - Billing
      summary: Retrieve plan information for a sub account
      description: Retrieve plan information for a sub account under the master account  <aside>Only
        for the sub account which is paid by master account</aside>
      operationId: accountPlans
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Account plans returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlans'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountPlans'
        "404":
          description: Account not fond
          content: {}
    post:
      tags:
      - Billing
      summary: Subscribe plans for a sub account
      description: Subscribe plans for a sub account of the master account <aside>Can
        only subscribe plans for the sub account which is a free account and paid
        by master account</aside>
      operationId: accountPlanCreate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - type: object
                properties:
                  contact:
                    $ref: '#/components/schemas/BillingContactRequired'
              - $ref: '#/components/schemas/AccountPlans'
          multipart/form-data:
            schema:
              allOf:
              - type: object
                properties:
                  contact:
                    $ref: '#/components/schemas/BillingContactRequired'
              - $ref: '#/components/schemas/AccountPlans'
        required: true
      responses:
        "201":
          description: Account plans updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPlans'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountPlans'
      x-codegen-request-body-name: body
  /accounts/{accountId}/plans/addons:
    put:
      tags:
      - Billing
      summary: Update an additional plan for sub account
      description: Update an additional plan for sub account<aside>Can only update
        an Additional plan for the sub account which is a paid account and paid by
        master account</aside>
      operationId: accountPlanAddonUpdate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPlanRequired'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountPlanRequired'
        required: true
      responses:
        "204":
          description: Account plans updated
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - Billing
      summary: Add an additional plan for sub account
      description: Add an additional plan for sub account <aside>Can only add an Additional
        plan for the sub account which is a paid account and paid by master account</aside>
      operationId: accountPlanAddonCreate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPlanRequired'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountPlanRequired'
        required: true
      responses:
        "201":
          description: Account plans updated
          content: {}
      x-codegen-request-body-name: body
  /accounts/{accountId}/plans/base:
    put:
      tags:
      - Billing
      summary: Update a base plan for a sub account
      description: Update a base plan for a sub account <aside>Can only update a base
        plan for the sub account which is a paid account and paid by master account</aside>
      operationId: accountPlanBaseUpdate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPlanBaseRequired'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountPlanBaseRequired'
        required: true
      responses:
        "204":
          description: Account plans updated
          content: {}
      x-codegen-request-body-name: body
  /accounts/{accountId}/settings:
    get:
      tags:
      - Accounts
      summary: Retrieve a sub account's settings
      description: Retrieve a sub account's settings under the master account
      operationId: accountSettings
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Account settings returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        "404":
          description: Account not found
          content: {}
    patch:
      tags:
      - Accounts
      summary: Update a sub account's settings
      description: Update a sub account's settings under the master account
      operationId: accountSettingsUpdate
      parameters:
      - name: accountId
        in: path
        description: The account ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountSettings'
        required: true
      responses:
        "204":
          description: Account settings updated
          content: {}
        "404":
          description: Account not found
          content: {}
      x-codegen-request-body-name: body
  /groups:
    get:
      tags:
      - Groups
      summary: List groups
      description: List groups under your account
      operationId: groups
      responses:
        "200":
          description: List of groups returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupList'
    post:
      tags:
      - Groups
      summary: Create a group
      description: Create a group under your account
      operationId: groupCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group name
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group name
        required: true
      responses:
        "201":
          description: Group created
          headers:
            Content-Location:
              description: Location of created group
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Group ID
                  name:
                    type: string
                    description: Group name
                  total_members:
                    type: integer
                    description: Group member count
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Group ID
                  name:
                    type: string
                    description: Group name
                  total_members:
                    type: integer
                    description: Group member count
      x-codegen-request-body-name: body
  /groups/{groupId}:
    get:
      tags:
      - Groups
      summary: Retrieve a group
      description: Retrieve a group under your account
      operationId: group
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Group object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Group ID
                - $ref: '#/components/schemas/Group'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Group ID
                - $ref: '#/components/schemas/Group'
        "404":
          description: Group not found
          content: {}
    delete:
      tags:
      - Groups
      summary: Delete a group
      description: Delete a group under your account
      operationId: groupDelete
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Group deleted
          content: {}
        "404":
          description: Group not found
          content: {}
    patch:
      tags:
      - Groups
      summary: Update a group
      description: Update a group under your account
      operationId: groupUpdate
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group name. Must be unique in one account. Character
                    length is less than 128.
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group name. Must be unique in one account. Character
                    length is less than 128.
        required: true
      responses:
        "204":
          description: Group updated
          content: {}
        "404":
          description: Group not found
          content: {}
      x-codegen-request-body-name: body
  /groups/{groupId}/members:
    get:
      tags:
      - Groups
      summary: List a group's members
      description: List a group's members under your account
      operationId: groupMembers
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Group member list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupMemberList'
        "404":
          description: Group not found
          content: {}
    post:
      tags:
      - Groups
      summary: Add group members
      description: Add members to a group under your account
      operationId: groupMembersCreate
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  description: List of Group members
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: "User email. If ID given, email is ignored."
                      id:
                        type: string
                        description: User ID
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: array
                  description: List of Group members
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: "User email. If ID given, email is ignored."
                      id:
                        type: string
                        description: User ID
        required: true
      responses:
        "201":
          description: Member added
          content:
            application/json:
              schema:
                type: object
                properties:
                  added_at:
                    type: string
                    format: date-time
                  ids:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  added_at:
                    type: string
                    format: date-time
                  ids:
                    type: string
        "404":
          description: Group not found
          content: {}
      x-codegen-request-body-name: body
  /groups/{groupId}/members/{memberId}:
    delete:
      tags:
      - Groups
      summary: Delete a group member
      description: Delete a member from a group under your account
      operationId: groupMembersDelete
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      - name: memberId
        in: path
        description: The member ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Group member deleted
          content: {}
        "404":
          description: Group or Group member not found
          content: {}
  /h323/devices:
    get:
      tags:
      - Devices
      summary: List H.323/SIP Devices.
      description: List H.323/SIP Devices on your Zoom account.
      operationId: deviceList
      responses:
        "200":
          description: List of H.323/SIP Devices returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeviceList'
    post:
      tags:
      - Devices
      summary: Create a H.323/SIP Device
      description: Create a H.323/SIP Device on your Zoom account
      operationId: deviceCreate
      requestBody:
        description: H.323/SIP Device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        "201":
          description: H.323/SIP Device created
          headers:
            Content-Location:
              description: Location of created device
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Device ID
                - $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Device ID
                - $ref: '#/components/schemas/Device'
      x-codegen-request-body-name: body
  /h323/devices/{deviceId}:
    delete:
      tags:
      - Devices
      summary: Delete a H.323/SIP Device
      description: Delete a H.323/SIP Device on your Zoom account
      operationId: deviceDelete
      parameters:
      - name: deviceId
        in: path
        description: The device ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: H.323/SIP Device deleted
          content: {}
        "404":
          description: H.323/SIP Device not found
          content: {}
    patch:
      tags:
      - Devices
      summary: Update a H.323/SIP Device
      description: Update a H.323/SIP Device on your Zoom account
      operationId: deviceUpdate
      parameters:
      - name: deviceId
        in: path
        description: The device ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        "204":
          description: H.323/SIP Device updated
          content: {}
        "404":
          description: H.323/SIP Device not found
          content: {}
      x-codegen-request-body-name: body
  /im/chat/sessions:
    get:
      tags:
      - IM Chat
      summary: Retrieve IM Chat sessions
      description: Retrieve IM Chat sessions for a specified period <aside>This API
        only supports oauth2.</aside>
      operationId: imChatSessions
      parameters:
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Archived IM Chat sessions Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date
                      format: date
                    to:
                      type: string
                      description: End date
                      format: date
                - $ref: '#/components/schemas/PaginationToken4IMChat'
                - type: object
                  properties:
                    sessions:
                      type: array
                      description: Array of session objects
                      items:
                        type: object
                        properties:
                          last_message_sent_time:
                            type: string
                            description: Last message sent time
                            format: date-time
                          name:
                            type: string
                            description: Meeting topic
                          session_id:
                            type: string
                            description: IM Chat session ID
                          type:
                            type: string
                            description: IM Chat session type
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date
                      format: date
                    to:
                      type: string
                      description: End date
                      format: date
                - $ref: '#/components/schemas/PaginationToken4IMChat'
                - type: object
                  properties:
                    sessions:
                      type: array
                      description: Array of session objects
                      items:
                        type: object
                        properties:
                          last_message_sent_time:
                            type: string
                            description: Last message sent time
                            format: date-time
                          name:
                            type: string
                            description: Meeting topic
                          session_id:
                            type: string
                            description: IM Chat session ID
                          type:
                            type: string
                            description: IM Chat session type
  /im/chat/sessions/{sessionId}:
    get:
      tags:
      - IM Chat
      summary: Retrieve IM Chat messages
      description: Retrieve IM Chat messages for a specified period <aside>This API
        only supports oauth2.</aside>
      operationId: imChatMessages
      parameters:
      - name: sessionId
        in: path
        description: IM Chat Session ID
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Archived IM Chat messages Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date
                      format: date
                    session_id:
                      type: string
                      description: IM Chat session ID
                    to:
                      type: string
                      description: End date
                      format: date
                - $ref: '#/components/schemas/PaginationToken4IMChat'
                - type: object
                  properties:
                    messages:
                      type: array
                      description: Array of session objects
                      items:
                        type: object
                        properties:
                          action:
                            type: string
                            description: IM Chat message action
                          action_time:
                            type: string
                            description: Action time
                            format: date-time
                          date_time:
                            type: string
                            description: IM Chat message sent time
                            format: date-time
                          message:
                            type: string
                            description: IM Chat message content
                          sender:
                            type: string
                            description: IM Chat message sender
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date
                      format: date
                    session_id:
                      type: string
                      description: IM Chat session ID
                    to:
                      type: string
                      description: End date
                      format: date
                - $ref: '#/components/schemas/PaginationToken4IMChat'
                - type: object
                  properties:
                    messages:
                      type: array
                      description: Array of session objects
                      items:
                        type: object
                        properties:
                          action:
                            type: string
                            description: IM Chat message action
                          action_time:
                            type: string
                            description: Action time
                            format: date-time
                          date_time:
                            type: string
                            description: IM Chat message sent time
                            format: date-time
                          message:
                            type: string
                            description: IM Chat message content
                          sender:
                            type: string
                            description: IM Chat message sender
  /im/groups:
    get:
      tags:
      - IM Groups
      summary: List IM Groups
      description: List IM groups under your account
      operationId: imGroups
      responses:
        "200":
          description: List of IM Groups returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IMGroupList'
            application/xml:
              schema:
                $ref: '#/components/schemas/IMGroupList'
    post:
      tags:
      - IM Groups
      summary: Create an IM Group
      description: Create a IM Group under your account
      operationId: imGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  maxLength: 128
                  type: string
                  description: "Group name, must be unique in one account"
                search_by_account:
                  type: boolean
                  description: Members can search others under same account
                search_by_domain:
                  type: boolean
                  description: Members can search others in the same email domain
                search_by_ma_account:
                  type: boolean
                  description: "Members can search others under same master account,\
                    \ including all sub accounts"
                type:
                  type: string
                  description: IM Group type
                  default: normal
                  enum:
                  - normal
                  - shared
                  - restricted
                  x-enum-descriptions:
                  - Only members can see the group automatically. Other people can
                    search members in the group.
                  - All people in the account can see the group and members automatically
                  - Nobody can see the group or search members except the members
                    in the group
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  maxLength: 128
                  type: string
                  description: "Group name, must be unique in one account"
                search_by_account:
                  type: boolean
                  description: Members can search others under same account
                search_by_domain:
                  type: boolean
                  description: Members can search others in the same email domain
                search_by_ma_account:
                  type: boolean
                  description: "Members can search others under same master account,\
                    \ including all sub accounts"
                type:
                  type: string
                  description: IM Group type
                  default: normal
                  enum:
                  - normal
                  - shared
                  - restricted
                  x-enum-descriptions:
                  - Only members can see the group automatically. Other people can
                    search members in the group.
                  - All people in the account can see the group and members automatically
                  - Nobody can see the group or search members except the members
                    in the group
        required: true
      responses:
        "201":
          description: IM Group created
          headers:
            Content-Location:
              description: Location of created IM Group
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Group ID
                  name:
                    type: string
                    description: Group name
                  search_by_account:
                    type: boolean
                    description: Members can search others under same account
                  search_by_domain:
                    type: boolean
                    description: Members can search others in the same email domain
                  search_by_ma_account:
                    type: boolean
                    description: "Members can search others under same master account,\
                      \ including all sub accounts"
                  total_members:
                    type: integer
                    description: Group member count
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Group ID
                  name:
                    type: string
                    description: Group name
                  search_by_account:
                    type: boolean
                    description: Members can search others under same account
                  search_by_domain:
                    type: boolean
                    description: Members can search others in the same email domain
                  search_by_ma_account:
                    type: boolean
                    description: "Members can search others under same master account,\
                      \ including all sub accounts"
                  total_members:
                    type: integer
                    description: Group member count
      x-codegen-request-body-name: body
  /im/groups/{groupId}:
    get:
      tags:
      - IM Groups
      summary: Retrieve an IM Group
      description: Retrieve an IM Group under your account
      operationId: imGroup
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: IM Group object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Group ID
                - $ref: '#/components/schemas/IMGroup'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Group ID
                - $ref: '#/components/schemas/IMGroup'
        "404":
          description: IM Group not found
          content: {}
    delete:
      tags:
      - IM Groups
      summary: Delete an IM Group
      description: Delete an IM Group under your account
      operationId: imGroupDelete
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: IM Group deleted
          content: {}
        "404":
          description: IM Group not found
          content: {}
    patch:
      tags:
      - IM Groups
      summary: Update an IM Group
      description: Update an IM Group under your account
      operationId: imGroupUpdate
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  maxLength: 128
                  type: string
                  description: "Group name, must be unique in one account"
                search_by_account:
                  type: boolean
                  description: Members can search others under same account
                search_by_domain:
                  type: boolean
                  description: Members can search others in the same email domain
                search_by_ma_account:
                  type: boolean
                  description: "Members can search others under same master account,\
                    \ including all sub accounts"
                type:
                  type: string
                  description: IM Group type
                  enum:
                  - normal
                  - shared
                  - restricted
                  x-enum-descriptions:
                  - Only members can see the group automatically. Other people can
                    search members in the group.
                  - All people in the account can see the group and members automatically
                  - Nobody can see the group or search members except the members
                    in the group
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  maxLength: 128
                  type: string
                  description: "Group name, must be unique in one account"
                search_by_account:
                  type: boolean
                  description: Members can search others under same account
                search_by_domain:
                  type: boolean
                  description: Members can search others in the same email domain
                search_by_ma_account:
                  type: boolean
                  description: "Members can search others under same master account,\
                    \ including all sub accounts"
                type:
                  type: string
                  description: IM Group type
                  enum:
                  - normal
                  - shared
                  - restricted
                  x-enum-descriptions:
                  - Only members can see the group automatically. Other people can
                    search members in the group.
                  - All people in the account can see the group and members automatically
                  - Nobody can see the group or search members except the members
                    in the group
        required: true
      responses:
        "204":
          description: IM Group updated
          content: {}
        "404":
          description: IM Group not found
          content: {}
      x-codegen-request-body-name: body
  /im/groups/{groupId}/members:
    get:
      tags:
      - IM Groups
      summary: List an IM Group's members
      description: List an IM Group's members under your account
      operationId: imGroupMembers
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: IM Group member list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberList'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupMemberList'
        "404":
          description: IM Group not found
          content: {}
    post:
      tags:
      - IM Groups
      summary: Add IM Group members
      description: Add members to an IM Group under your account
      operationId: imGroupMembersCreate
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  description: List of IM Group members
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: "User email. If ID given, email is ignored."
                      id:
                        type: string
                        description: User ID
          multipart/form-data:
            schema:
              type: object
              properties:
                members:
                  type: array
                  description: List of IM Group members
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: "User email. If ID given, email is ignored."
                      id:
                        type: string
                        description: User ID
        required: true
      responses:
        "201":
          description: Member added
          content:
            application/json:
              schema:
                type: object
                properties:
                  added_at:
                    type: string
                    format: date-time
                  ids:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  added_at:
                    type: string
                    format: date-time
                  ids:
                    type: string
        "404":
          description: IM Group not found
          content: {}
      x-codegen-request-body-name: body
  /im/groups/{groupId}/members/{memberId}:
    delete:
      tags:
      - IM Groups
      summary: Delete an IM Group member
      description: Delete a member from an IM Group under your account
      operationId: imGroupMembersDelete
      parameters:
      - name: groupId
        in: path
        description: The group ID
        required: true
        schema:
          type: string
      - name: memberId
        in: path
        description: The member ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: IM Group member deleted
          content: {}
        "404":
          description: IM Group or IM Group member not found
          content: {}
  /meetings/{meetingId}:
    get:
      tags:
      - Meetings
      summary: Retrieve a meeting
      description: Retrieve a meeting's details
      operationId: meeting
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Meeting object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of meeting
                    id:
                      type: string
                      description: "Meeting ID, also know as meeting number"
                    uuid:
                      type: string
                      description: Meeting unique ID
                - $ref: '#/components/schemas/MeetingInfo'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of meeting
                    id:
                      type: string
                      description: "Meeting ID, also know as meeting number"
                    uuid:
                      type: string
                      description: Meeting unique ID
                - $ref: '#/components/schemas/MeetingInfo'
        "404":
          description: Meeting not found
          content: {}
    delete:
      tags:
      - Meetings
      summary: Delete a meeting
      description: Delete a meeting
      operationId: meetingDelete
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: occurrence_id
        in: query
        description: The meeting occurrence ID
        schema:
          type: string
      responses:
        "204":
          description: Meeting deleted
          content: {}
        "404":
          description: Meeting not found
          content: {}
    patch:
      tags:
      - Meetings
      summary: Update a meeting
      description: Update a meeting's details
      operationId: meetingUpdate
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Meeting
        content:
          application/json:
            schema:
              allOf:
              - type: object
                properties:
                  schedule_for:
                    type: string
                    description: Email or userId if you want to schedule meeting for
                      another user.
              - $ref: '#/components/schemas/MeetingUpdate'
          multipart/form-data:
            schema:
              allOf:
              - type: object
                properties:
                  schedule_for:
                    type: string
                    description: Email or userId if you want to schedule meeting for
                      another user.
              - $ref: '#/components/schemas/MeetingUpdate'
        required: true
      responses:
        "204":
          description: Meeting Updated
          content: {}
        "404":
          description: Meeting not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/invitation:
    get:
      tags:
      - Meetings
      summary: Retrieve meeting invitation
      description: Retrieve a meeting invitation
      operationId: meetingInvitation
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Meeting invitation Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingInvitation'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeetingInvitation'
  /meetings/{meetingId}/livestream:
    patch:
      tags:
      - Meetings
      summary: Update a meeting live stream
      description: Update a meeting's live stream
      operationId: meetingLiveStreamUpdate
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Meeting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingLiveStream'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeetingLiveStream'
        required: true
      responses:
        "204":
          description: Meeting live stream Updated
          content: {}
        "404":
          description: Meeting not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/livestream/status:
    patch:
      tags:
      - Meetings
      summary: Update a meeting live stream status
      description: Update a meeting's live stream status
      operationId: meetingLiveStreamStatusUpdate
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Meeting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingLiveStreamStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeetingLiveStreamStatus'
        required: true
      responses:
        "204":
          description: Meeting live stream Updated
          content: {}
        "404":
          description: Meeting not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/polls:
    get:
      tags:
      - Meetings
      summary: 'List a meeting''s polls '
      description: List polls of a meeting
      operationId: meetingPolls
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List polls of a Meeting  returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PollList'
        "404":
          description: Meeting not found
          content: {}
    post:
      tags:
      - Meetings
      summary: Create a meeting's poll
      description: Create a poll for a meeting
      operationId: meetingPollCreate
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Meeting poll object
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
        required: true
      responses:
        "201":
          description: Meeting Poll Created
          headers:
            Content-Location:
              description: Location of created Meeting Poll
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                    status:
                      type: string
                      description: Status of the Meeting Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                    status:
                      type: string
                      description: Status of the Meeting Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
        "404":
          description: Meeting not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/polls/{pollId}:
    get:
      tags:
      - Meetings
      summary: Retrieve a meeting's poll
      description: Retrieve a meeting's poll
      operationId: meetingPollGet
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: pollId
        in: path
        description: The poll ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Meeting Poll object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                    status:
                      type: string
                      description: Status of the Meeting Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                    status:
                      type: string
                      description: Status of the Meeting Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
        "404":
          description: Meeting Poll not found
          content: {}
    put:
      tags:
      - Meetings
      summary: Update a meeting's poll
      description: Update a meeting's poll
      operationId: meetingPollUpdate
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: pollId
        in: path
        description: The poll ID
        required: true
        schema:
          type: string
      requestBody:
        description: Meeting Poll
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
        required: true
      responses:
        "204":
          description: Meeting Poll Updated
          content: {}
        "404":
          description: Meeting Poll not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Meetings
      summary: Delete a meeting's Poll
      description: Delete a meeting's Poll
      operationId: meetingPollDelete
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: pollId
        in: path
        description: The poll ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Meeting Poll deleted
          content: {}
        "404":
          description: Meeting Poll not found
          content: {}
  /meetings/{meetingId}/recordings:
    get:
      tags:
      - Cloud Recording
      summary: Retrieve a meeting’s all recordings
      description: Retrieve a meeting’s all recordings
      operationId: recordingGet
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Recording object returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RecordingMeeting'
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/RecordingMeeting'
        "404":
          description: Meeting recording not found
          content: {}
    delete:
      tags:
      - Cloud Recording
      summary: Delete a meeting's recordings
      description: Delete a meeting's recordings
      operationId: recordingDelete
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: The recording delete action
        schema:
          type: string
          default: trash
          enum:
          - trash
          - delete
          x-enum-descriptions:
          - move recording to trash
          - delete recording permanently
        x-enum-descriptions:
        - move recording to trash
        - delete recording permanently
      responses:
        "204":
          description: Meeting recording deleted
          content: {}
        "404":
          description: Meeting recording not found
          content: {}
  /meetings/{meetingId}/recordings/settings:
    get:
      tags:
      - Cloud Recording
      summary: Retrieve a meeting recording's settings
      description: Retrieve a meeting recording's settings
      operationId: recordingSettingUpdate
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Meeting recording settings returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/RecordingSettings'
        "404":
          description: Meeting recording not found
          content: {}
    patch:
      tags:
      - Cloud Recording
      summary: Update a meeting recording's settings
      description: Update a meeting recording's settings
      operationId: recordingSettingsUpdate
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      requestBody:
        description: Meeting recording Settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordingSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecordingSettings'
        required: true
      responses:
        "204":
          description: Meeting recording setting's updated
          content: {}
        "404":
          description: Meeting recording not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/recordings/status:
    put:
      tags:
      - Cloud Recording
      summary: Recover a meeting's recordings
      description: Recover a meeting's recordings
      operationId: recordingStatusUpdate
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - recover
                  x-enum-descriptions:
                  - recover meeting recording
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - recover
                  x-enum-descriptions:
                  - recover meeting recording
        required: true
      responses:
        "204":
          description: Meeting recording recover
          content: {}
        "404":
          description: Meeting recording not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/recordings/{recordingId}:
    delete:
      tags:
      - Cloud Recording
      summary: Delete one meeting recording file
      description: Delete one meeting recording file
      operationId: recordingDeleteOne
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: recordingId
        in: path
        description: The recording ID
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: The recording delete action
        schema:
          type: string
          default: trash
          enum:
          - trash
          - delete
          x-enum-descriptions:
          - move recording to trash
          - delete recording permanently
        x-enum-descriptions:
        - move recording to trash
        - delete recording permanently
      responses:
        "204":
          description: Meeting recording file deleted
          content: {}
        "404":
          description: Meeting recording file not found
          content: {}
  /meetings/{meetingId}/recordings/{recordingId}/status:
    put:
      tags:
      - Cloud Recording
      summary: Recover a single recording
      description: Recover a single recording
      operationId: recordingStatusUpdateOne
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: recordingId
        in: path
        description: The recording ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - recover
                  x-enum-descriptions:
                  - recover meeting recording
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - recover
                  x-enum-descriptions:
                  - recover meeting recording
        required: true
      responses:
        "204":
          description: Meeting recording recover
          content: {}
        "404":
          description: Meeting recording not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/registrants:
    get:
      tags:
      - Meetings
      summary: List a meeting's registrants
      description: List registrants of a meeting
      operationId: meetingRegistrants
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: occurrence_id
        in: query
        description: The meeting occurrence ID
        schema:
          type: string
      - name: status
        in: query
        description: The registrant status
        schema:
          type: string
          default: approved
          enum:
          - pending
          - approved
          - denied
          x-enum-descriptions:
          - registrants status is pending
          - registrants status is approved
          - registrants status is denied
        x-enum-descriptions:
        - registrants status is pending
        - registrants status is approved
        - registrants status is denied
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRegistrantList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeetingRegistrantList'
        "404":
          description: Meeting not found
          content: {}
    post:
      tags:
      - Meetings
      summary: Add a meeting registrant
      description: Register a participant for a meeting
      operationId: meetingRegistrantCreate
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: occurrence_ids
        in: query
        description: Occurrence IDs. You can find these with the meeting get API.
          Multiple values separated by comma.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRegistrant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeetingRegistrant'
        required: true
      responses:
        "201":
          description: Registration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Registrant ID
                  join_url:
                    type: string
                    description: Join URL for this registrant
                  registrant_id:
                    type: string
                    description: Registrant ID
                  start_time:
                    type: string
                    description: Start time
                    format: date-time
                  topic:
                    type: string
                    description: Topic
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Registrant ID
                  join_url:
                    type: string
                    description: Join URL for this registrant
                  registrant_id:
                    type: string
                    description: Registrant ID
                  start_time:
                    type: string
                    description: Start time
                    format: date-time
                  topic:
                    type: string
                    description: Topic
        "404":
          description: Meeting not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/registrants/status:
    put:
      tags:
      - Meetings
      summary: Update a meeting registrant's status
      description: Update a meeting registrant's status
      operationId: meetingRegistrantStatus
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      - name: occurrence_id
        in: query
        description: The meeting occurrence ID
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrantStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistrantStatus'
        required: true
      responses:
        "204":
          description: Registrant status updated
          content: {}
        "404":
          description: Meeting or Registrant not found
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}/status:
    put:
      tags:
      - Meetings
      summary: Update a meeting's status
      description: Update a meeting's status
      operationId: meetingStatus
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - end
                  x-enum-descriptions:
                  - end a meeting
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - end
                  x-enum-descriptions:
                  - end a meeting
        required: true
      responses:
        "204":
          description: Meeting updated
          content: {}
        "404":
          description: Meeting not found
          content: {}
      x-codegen-request-body-name: body
  /metrics/crc:
    get:
      tags:
      - Dashboards
      summary: Retrieve CRC Port Usage
      description: "Get CRC Port usage hour by hour for a specified time period <aside\
        \ class='notice'>We will report a maximum of one month. For example, if \"\
        from\" is set to \"2017-08-05\" and \"to\" is \"2017-10-10\" we will adjust\
        \ \"from\" to \"2017-09-10\"</aside>."
      operationId: dashboardCRC
      parameters:
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: CRC Usage returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - type: object
                  properties:
                    crc_ports_usage:
                      type: array
                      items:
                        type: object
                        properties:
                          crc_ports_hour_usage:
                            type: array
                            items:
                              type: object
                              properties:
                                hour:
                                  type: string
                                max_usage:
                                  type: integer
                                total_usage:
                                  type: integer
                          date_time:
                            type: string
                            description: Date and time
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - type: object
                  properties:
                    crc_ports_usage:
                      type: array
                      items:
                        type: object
                        properties:
                          crc_ports_hour_usage:
                            type: array
                            items:
                              type: object
                              properties:
                                hour:
                                  type: string
                                max_usage:
                                  type: integer
                                total_usage:
                                  type: integer
                          date_time:
                            type: string
                            description: Date and time
  /metrics/im:
    get:
      tags:
      - Dashboards
      summary: Retrieve IM
      description: Retrieve metrics of Zoom IM
      operationId: dashboardIM
      parameters:
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: IM setails returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    users:
                      type: array
                      items:
                        type: object
                        properties:
                          calls_receive:
                            type: integer
                          calls_send:
                            type: integer
                          email:
                            type: string
                            description: User email
                          emoji_receive:
                            type: integer
                          emoji_send:
                            type: integer
                          files_receive:
                            type: integer
                          files_send:
                            type: integer
                          group_receive:
                            type: integer
                          group_send:
                            type: integer
                          images_receive:
                            type: integer
                          images_send:
                            type: integer
                          total_receive:
                            type: integer
                          total_send:
                            type: integer
                          user_id:
                            type: string
                            description: User ID
                          user_name:
                            type: string
                            description: User display name
                          videos_receive:
                            type: integer
                          videos_send:
                            type: integer
                          voice_receive:
                            type: integer
                          voice_send:
                            type: integer
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    users:
                      type: array
                      items:
                        type: object
                        properties:
                          calls_receive:
                            type: integer
                          calls_send:
                            type: integer
                          email:
                            type: string
                            description: User email
                          emoji_receive:
                            type: integer
                          emoji_send:
                            type: integer
                          files_receive:
                            type: integer
                          files_send:
                            type: integer
                          group_receive:
                            type: integer
                          group_send:
                            type: integer
                          images_receive:
                            type: integer
                          images_send:
                            type: integer
                          total_receive:
                            type: integer
                          total_send:
                            type: integer
                          user_id:
                            type: string
                            description: User ID
                          user_name:
                            type: string
                            description: User display name
                          videos_receive:
                            type: integer
                          videos_send:
                            type: integer
                          voice_receive:
                            type: integer
                          voice_send:
                            type: integer
  /metrics/meetings:
    get:
      tags:
      - Dashboards
      summary: List meetings
      description: List live meetings or past meetings for a specified period
      operationId: dashboardMeetings
      parameters:
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - past
          - pastOne
          - live
          x-enum-descriptions:
          - past meetings
          - past one user meetings
          - live meetings
        x-enum-descriptions:
        - past meetings
        - past one user meetings
        - live meetings
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meetings Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    meetings:
                      type: array
                      description: Array of meeting objects
                      items:
                        $ref: '#/components/schemas/MeetingMetric'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    meetings:
                      type: array
                      description: Array of meeting objects
                      items:
                        $ref: '#/components/schemas/MeetingMetric'
  /metrics/meetings/{meetingId}:
    get:
      tags:
      - Dashboards
      summary: Retrieve meeting detail
      description: Retrieve live or past meetings detail
      operationId: dashboardMeetingDetail
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - past
          - pastOne
          - live
          x-enum-descriptions:
          - past meeting
          - past one user meeting
          - live meeting
        x-enum-descriptions:
        - past meeting
        - past one user meeting
        - live meeting
      responses:
        "200":
          description: Meeting Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingMetric'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeetingMetric'
  /metrics/meetings/{meetingId}/participants:
    get:
      tags:
      - Dashboards
      summary: Retrieve meeting participants
      description: Retrieve live or past meetings participants
      operationId: dashboardMeetingParticipants
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - past
          - pastOne
          - live
          x-enum-descriptions:
          - past meeting
          - past one user meeting
          - live meeting
        x-enum-descriptions:
        - past meeting
        - past one user meeting
        - live meeting
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meeting Participants Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of user objects
                      items:
                        type: object
                        properties:
                          connection_type:
                            type: string
                            description: Participant connection type
                          data_center:
                            type: string
                            description: Participant data center
                          device:
                            type: string
                            description: Participant device
                          domain:
                            type: string
                            description: Participant domain
                          harddisk_id:
                            type: string
                            description: Participant hard disk id
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          ip_address:
                            type: string
                            description: Participant IP Address
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          location:
                            type: string
                            description: Participant location
                          mac_addr:
                            type: string
                            description: Participant MAC Address
                          microphone:
                            type: string
                            description: Participant microphone
                          network_type:
                            type: string
                            description: Participant network type
                          pc_name:
                            type: string
                            description: Participant PC name
                          recording:
                            type: boolean
                            description: Participant record
                          share_application:
                            type: boolean
                            description: Did participant share application
                          share_desktop:
                            type: boolean
                            description: Did participant share desktop
                          share_whiteboard:
                            type: boolean
                            description: Did participant share whiteboard
                          speaker:
                            type: string
                            description: Participant speaker
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
                          version:
                            type: string
                            description: Participant version
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of user objects
                      items:
                        type: object
                        properties:
                          connection_type:
                            type: string
                            description: Participant connection type
                          data_center:
                            type: string
                            description: Participant data center
                          device:
                            type: string
                            description: Participant device
                          domain:
                            type: string
                            description: Participant domain
                          harddisk_id:
                            type: string
                            description: Participant hard disk id
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          ip_address:
                            type: string
                            description: Participant IP Address
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          location:
                            type: string
                            description: Participant location
                          mac_addr:
                            type: string
                            description: Participant MAC Address
                          microphone:
                            type: string
                            description: Participant microphone
                          network_type:
                            type: string
                            description: Participant network type
                          pc_name:
                            type: string
                            description: Participant PC name
                          recording:
                            type: boolean
                            description: Participant record
                          share_application:
                            type: boolean
                            description: Did participant share application
                          share_desktop:
                            type: boolean
                            description: Did participant share desktop
                          share_whiteboard:
                            type: boolean
                            description: Did participant share whiteboard
                          speaker:
                            type: string
                            description: Participant speaker
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
                          version:
                            type: string
                            description: Participant version
  /metrics/meetings/{meetingId}/participants/qos:
    get:
      tags:
      - Dashboards
      summary: List meeting participants QOS
      description: Retrieve list of live or past meetings participants quality of
        service
      operationId: dashboardMeetingParticipantsQOS
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past meeting
          - live meeting
        x-enum-descriptions:
        - past meeting
        - live meeting
      - name: page_size
        in: query
        description: Number of items returned per page
        schema:
          maximum: 10
          type: integer
          default: 1
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meeting Participants Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSParticipantList'
            application/xml:
              schema:
                $ref: '#/components/schemas/QOSParticipantList'
  /metrics/meetings/{meetingId}/participants/sharing:
    get:
      tags:
      - Dashboards
      summary: Retrieve sharing/recording details of meeting participant
      description: Retrieve sharing/recording details of live or past meetings participant
      operationId: dashboardMeetingParticipantShare
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past meeting
          - live meeting
        x-enum-descriptions:
        - past meeting
        - live meeting
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meeting Participants Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of participants
                      items:
                        type: object
                        properties:
                          details:
                            type: array
                            description: Array of sharing and recording details
                            items:
                              type: object
                              properties:
                                content:
                                  type: string
                                  description: Type of content shared
                                end_time:
                                  type: string
                                  description: End time of sharing
                                start_time:
                                  type: string
                                  description: Start time of sharing
                          id:
                            type: string
                            description: Participant UUID
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of participants
                      items:
                        type: object
                        properties:
                          details:
                            type: array
                            description: Array of sharing and recording details
                            items:
                              type: object
                              properties:
                                content:
                                  type: string
                                  description: Type of content shared
                                end_time:
                                  type: string
                                  description: End time of sharing
                                start_time:
                                  type: string
                                  description: Start time of sharing
                          id:
                            type: string
                            description: Participant UUID
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
  /metrics/meetings/{meetingId}/participants/{participantId}/qos:
    get:
      tags:
      - Dashboards
      summary: Retrieve meeting participant QOS
      description: Retrieve live or past meetings participant quality of service
      operationId: dashboardMeetingParticipantQOS
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: participantId
        in: path
        description: Participant ID
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past meeting
          - live meeting
        x-enum-descriptions:
        - past meeting
        - live meeting
      responses:
        "200":
          description: Meeting Participant QOS Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSParticipant'
            application/xml:
              schema:
                $ref: '#/components/schemas/QOSParticipant'
  /metrics/webinars:
    get:
      tags:
      - Dashboards
      summary: List webinars
      description: List live webinars or past webinars for a specified period
      operationId: dashboardWebinars
      parameters:
      - name: type
        in: query
        description: The webinar type
        schema:
          type: string
          default: live
          enum:
          - past
          - pastOne
          - live
          x-enum-descriptions:
          - past meetings
          - past one user meetings
          - live meetings
        x-enum-descriptions:
        - past meetings
        - past one user meetings
        - live meetings
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meetings Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    webinars:
                      type: array
                      description: Array of webinar objects
                      items:
                        $ref: '#/components/schemas/WebinarMetric'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    webinars:
                      type: array
                      description: Array of webinar objects
                      items:
                        $ref: '#/components/schemas/WebinarMetric'
  /metrics/webinars/{webinarId}:
    get:
      tags:
      - Dashboards
      summary: Retrieve webinar detail
      description: Retrieve live  or past webinars detail
      operationId: dashboardWebinarDetail
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The webinar type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past webinar
          - live webinar
        x-enum-descriptions:
        - past webinar
        - live webinar
      responses:
        "200":
          description: Webinar Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarMetric'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebinarMetric'
  /metrics/webinars/{webinarId}/participants:
    get:
      tags:
      - Dashboards
      summary: Retrieve webinar participants
      description: Retrieve live or past webinar participants
      operationId: dashboardWebinarParticipants
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The webinar type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past webinar
          - live webinar
        x-enum-descriptions:
        - past webinar
        - live webinar
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Webinar Participants Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of user objects
                      items:
                        type: object
                        properties:
                          connection_type:
                            type: string
                            description: Participant connection type
                          data_center:
                            type: string
                            description: Participant data center
                          device:
                            type: string
                            description: Participant device
                          domain:
                            type: string
                            description: Participant domain
                          harddisk_id:
                            type: string
                            description: Participant hard disk id
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          ip_address:
                            type: string
                            description: Participant IP Address
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          location:
                            type: string
                            description: Participant location
                          mac_addr:
                            type: string
                            description: Participant MAC Address
                          microphone:
                            type: string
                            description: Participant microphone
                          network_type:
                            type: string
                            description: Participant network type
                          pc_name:
                            type: string
                            description: Participant PC name
                          recording:
                            type: boolean
                            description: Participant record
                          share_application:
                            type: boolean
                            description: Did participant share application
                          share_desktop:
                            type: boolean
                            description: Did participant share desktop
                          share_whiteboard:
                            type: boolean
                            description: Did participant share whiteboard
                          speaker:
                            type: string
                            description: Participant speaker
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
                          version:
                            type: string
                            description: Participant version
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of user objects
                      items:
                        type: object
                        properties:
                          connection_type:
                            type: string
                            description: Participant connection type
                          data_center:
                            type: string
                            description: Participant data center
                          device:
                            type: string
                            description: Participant device
                          domain:
                            type: string
                            description: Participant domain
                          harddisk_id:
                            type: string
                            description: Participant hard disk id
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          ip_address:
                            type: string
                            description: Participant IP Address
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          location:
                            type: string
                            description: Participant location
                          mac_addr:
                            type: string
                            description: Participant MAC Address
                          microphone:
                            type: string
                            description: Participant microphone
                          network_type:
                            type: string
                            description: Participant network type
                          pc_name:
                            type: string
                            description: Participant PC name
                          recording:
                            type: boolean
                            description: Participant record
                          share_application:
                            type: boolean
                            description: Did participant share application
                          share_desktop:
                            type: boolean
                            description: Did participant share desktop
                          share_whiteboard:
                            type: boolean
                            description: Did participant share whiteboard
                          speaker:
                            type: string
                            description: Participant speaker
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
                          version:
                            type: string
                            description: Participant version
  /metrics/webinars/{webinarId}/participants/qos:
    get:
      tags:
      - Dashboards
      summary: List webinar participant QOS
      description: Retrieve list of live or past webinar participants quality of service
      operationId: dashboardWebinarParticipantsQOS
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The webinar type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past webinar
          - live webinar
        x-enum-descriptions:
        - past webinar
        - live webinar
      - name: page_size
        in: query
        description: Number of items returned per page
        schema:
          maximum: 10
          type: integer
          default: 1
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Webinar Participants Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSParticipantList'
            application/xml:
              schema:
                $ref: '#/components/schemas/QOSParticipantList'
  /metrics/webinars/{webinarId}/participants/sharing:
    get:
      tags:
      - Dashboards
      summary: Retrieve sharing/recording details of webinar participant
      description: Retrieve sharing/recording details of live or past webinar participant
      operationId: dashboardWebinarParticipantShare
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The webinar type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past webinar
          - live webinar
        x-enum-descriptions:
        - past webinar
        - live webinar
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Webinar Participants Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of participants
                      items:
                        type: object
                        properties:
                          details:
                            type: array
                            description: Array of sharing and recording details
                            items:
                              type: object
                              properties:
                                content:
                                  type: string
                                  description: Type of content shared
                                end_time:
                                  type: string
                                  description: End time of sharing
                                start_time:
                                  type: string
                                  description: Start time of sharing
                          id:
                            type: string
                            description: Participant UUID
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of participants
                      items:
                        type: object
                        properties:
                          details:
                            type: array
                            description: Array of sharing and recording details
                            items:
                              type: object
                              properties:
                                content:
                                  type: string
                                  description: Type of content shared
                                end_time:
                                  type: string
                                  description: End time of sharing
                                start_time:
                                  type: string
                                  description: Start time of sharing
                          id:
                            type: string
                            description: Participant UUID
                          user_id:
                            type: string
                            description: Participant ID
                          user_name:
                            type: string
                            description: Participant display name
  /metrics/webinars/{webinarId}/participants/{participantId}/qos:
    get:
      tags:
      - Dashboards
      summary: Retrieve webinar participant QOS
      description: Retrieve live or past webinar participant quality of service
      operationId: dashboardWebinarParticipantQOS
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      - name: participantId
        in: path
        description: Participant ID
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The webinar type
        schema:
          type: string
          default: live
          enum:
          - past
          - live
          x-enum-descriptions:
          - past webinar
          - live webinar
        x-enum-descriptions:
        - past webinar
        - live webinar
      responses:
        "200":
          description: Webinar Participant QOS Returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QOSParticipant'
            application/xml:
              schema:
                $ref: '#/components/schemas/QOSParticipant'
  /metrics/zoomrooms:
    get:
      tags:
      - Dashboards
      summary: List Zoom Rooms
      description: List all zoom rooms on account
      operationId: dashboardZoomRooms
      parameters:
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: List of Zoom Rooms returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoomRoomList'
            application/xml:
              schema:
                $ref: '#/components/schemas/ZoomRoomList'
  /metrics/zoomrooms/{zoomroomId}:
    get:
      tags:
      - Dashboards
      summary: Retrieve Zoom Room
      description: Retrieve zoom room on account
      operationId: dashboardZoomRoom
      parameters:
      - name: zoomroomId
        in: path
        description: The Zoom Room ID
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Zoom Room returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ZoomRoom'
                - type: object
                  properties:
                    live_meeting:
                      $ref: '#/components/schemas/MeetingMetric'
                    past_meetings:
                      type: object
                      allOf:
                      - type: object
                        properties:
                          from:
                            type: string
                            description: Start date for this report
                            format: date
                          to:
                            type: string
                            description: End date for this report
                            format: date
                      - $ref: '#/components/schemas/PaginationToken'
                      - type: object
                        properties:
                          meetings:
                            type: array
                            description: Array of meeting objects
                            items:
                              $ref: '#/components/schemas/MeetingMetric'
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/ZoomRoom'
                - type: object
                  properties:
                    live_meeting:
                      $ref: '#/components/schemas/MeetingMetric'
                    past_meetings:
                      type: object
                      allOf:
                      - type: object
                        properties:
                          from:
                            type: string
                            description: Start date for this report
                            format: date
                          to:
                            type: string
                            description: End date for this report
                            format: date
                      - $ref: '#/components/schemas/PaginationToken'
                      - type: object
                        properties:
                          meetings:
                            type: array
                            description: Array of meeting objects
                            items:
                              $ref: '#/components/schemas/MeetingMetric'
  /past_meetings/{meetingId}/instances:
    get:
      tags:
      - Meetings
      summary: List of ended meeting instances
      description: List of ended meeting instances
      operationId: pastMeetings
      parameters:
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List of ended meeting instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingInstances'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeetingInstances'
        "404":
          description: Meeting not found
          content: {}
  /past_meetings/{meetingUUID}:
    get:
      tags:
      - Meetings
      summary: Retrieve past meeting details
      description: Retrieve ended meeting details
      operationId: pastMeetingDetails
      parameters:
      - name: meetingUUID
        in: path
        description: The meeting UUID.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Meeting detail Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    type: integer
                    description: Meeting duration
                  end_time:
                    type: string
                    description: Meeting end time
                    format: date-time
                  host_id:
                    type: integer
                    description: Host ID
                  id:
                    type: integer
                    description: Meeting ID
                  participants_count:
                    type: integer
                    description: Number of meeting participants
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  topic:
                    type: string
                    description: Meeting topic
                  total_minutes:
                    type: integer
                    description: Number of meeting minutes
                  type:
                    type: integer
                    description: Meeting type
                  user_email:
                    type: string
                    description: User email
                  user_name:
                    type: string
                    description: User display name
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
            application/xml:
              schema:
                type: object
                properties:
                  duration:
                    type: integer
                    description: Meeting duration
                  end_time:
                    type: string
                    description: Meeting end time
                    format: date-time
                  host_id:
                    type: integer
                    description: Host ID
                  id:
                    type: integer
                    description: Meeting ID
                  participants_count:
                    type: integer
                    description: Number of meeting participants
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  topic:
                    type: string
                    description: Meeting topic
                  total_minutes:
                    type: integer
                    description: Number of meeting minutes
                  type:
                    type: integer
                    description: Meeting type
                  user_email:
                    type: string
                    description: User email
                  user_name:
                    type: string
                    description: User display name
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
        "404":
          description: Meeting not found
          content: {}
  /past_meetings/{meetingUUID}/participants:
    get:
      tags:
      - Meetings
      summary: Retrieve past meeting participants
      description: Retrieve ended meeting participants
      operationId: pastMeetingParticipants
      parameters:
      - name: meetingUUID
        in: path
        description: The meeting UUID.
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meeting Participants Report Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of meeting participant objects
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          name:
                            type: string
                            description: Participant display name
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of meeting participant objects
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          name:
                            type: string
                            description: Participant display name
        "404":
          description: Meeting not found
          content: {}
  /past_webinars/{webinarId}/instances:
    get:
      tags:
      - Webinars
      summary: List of ended webinar instances
      description: List of ended webinar instances
      operationId: pastWebinars
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List of ended webinar instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarInstances'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebinarInstances'
        "404":
          description: Webinar not found
          content: {}
  /report/cloud_recording:
    get:
      tags:
      - Reports
      summary: Retrieve cloud recording usage report
      description: Retrieve cloud recording usage report for a specified period. You
        can only get cloud recording reports for the most recent period of 6 months.
        The date gap between from and to dates should be smaller or equal to 30 days.
      operationId: reportCloudRecording
      parameters:
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Cloud Recording Report Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - type: object
                  properties:
                    cloud_recording_storage:
                      type: array
                      description: Array of cloud usage objects
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            format: date-time
                          free_usage:
                            type: string
                          plan_usage:
                            type: string
                          usage:
                            type: string
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - type: object
                  properties:
                    cloud_recording_storage:
                      type: array
                      description: Array of cloud usage objects
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            format: date-time
                          free_usage:
                            type: string
                          plan_usage:
                            type: string
                          usage:
                            type: string
        "300":
          description: Only provide report in recent 6 months
          content: {}
  /report/daily:
    get:
      tags:
      - Reports
      summary: Retrieve daily report
      description: "Retrieve daily report for one month, can only get daily report\
        \ for recent 6 months"
      operationId: reportDaily
      parameters:
      - name: year
        in: query
        description: Year for this report
        schema:
          type: integer
      - name: month
        in: query
        description: Month for this report
        schema:
          type: integer
      responses:
        "200":
          description: Daily Report Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    description: Array of date objects
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: Date for this object
                          format: date
                        meeting_minutes:
                          type: integer
                          description: Number of meeting minutes on this date
                        meetings:
                          type: integer
                          description: Number of meetings on this date
                        new_users:
                          type: integer
                          description: Number of new users on this date
                        participants:
                          type: integer
                          description: Number of participants on this date
                  month:
                    type: integer
                    description: Month for this report
                  year:
                    type: integer
                    description: Year for this report
            application/xml:
              schema:
                type: object
                properties:
                  dates:
                    type: array
                    description: Array of date objects
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          description: Date for this object
                          format: date
                        meeting_minutes:
                          type: integer
                          description: Number of meeting minutes on this date
                        meetings:
                          type: integer
                          description: Number of meetings on this date
                        new_users:
                          type: integer
                          description: Number of new users on this date
                        participants:
                          type: integer
                          description: Number of participants on this date
                  month:
                    type: integer
                    description: Month for this report
                  year:
                    type: integer
                    description: Year for this report
  /report/meetings/{meetingId}:
    get:
      tags:
      - Reports
      summary: Retrieve meeting details report
      description: Retrieve ended meeting details report
      operationId: reportMeetingDetails
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Meeting detail Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    type: integer
                    description: Meeting duration
                  end_time:
                    type: string
                    description: Meeting end time
                    format: date-time
                  id:
                    type: integer
                    description: Meeting ID
                  participants_count:
                    type: integer
                    description: Number of meeting participants
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  topic:
                    type: string
                    description: Meeting topic
                  total_minutes:
                    type: integer
                    description: Number of meeting minutes
                  tracking_fields:
                    type: array
                    description: Tracking fields
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type
                        value:
                          type: string
                          description: Tracking fields value
                  type:
                    type: integer
                    description: Meeting type
                  user_email:
                    type: string
                    description: User email
                  user_name:
                    type: string
                    description: User display name
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
            application/xml:
              schema:
                type: object
                properties:
                  duration:
                    type: integer
                    description: Meeting duration
                  end_time:
                    type: string
                    description: Meeting end time
                    format: date-time
                  id:
                    type: integer
                    description: Meeting ID
                  participants_count:
                    type: integer
                    description: Number of meeting participants
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  topic:
                    type: string
                    description: Meeting topic
                  total_minutes:
                    type: integer
                    description: Number of meeting minutes
                  tracking_fields:
                    type: array
                    description: Tracking fields
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type
                        value:
                          type: string
                          description: Tracking fields value
                  type:
                    type: integer
                    description: Meeting type
                  user_email:
                    type: string
                    description: User email
                  user_name:
                    type: string
                    description: User display name
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
        "404":
          description: Meeting not found
          content: {}
  /report/meetings/{meetingId}/participants:
    get:
      tags:
      - Reports
      summary: Retrieve meeting participants report
      description: Retrieve ended meeting participants report
      operationId: reportMeetingParticipants
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meeting Participants Report Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of meeting participant objects
                      items:
                        type: object
                        properties:
                          attentiveness_score:
                            type: integer
                            description: Participant attentiveness score
                          duration:
                            type: integer
                            description: Participant duration
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          name:
                            type: string
                            description: Participant display name
                          user_email:
                            type: string
                            description: Participant email
                          user_id:
                            type: string
                            description: Participant ID
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of meeting participant objects
                      items:
                        type: object
                        properties:
                          attentiveness_score:
                            type: integer
                            description: Participant attentiveness score
                          duration:
                            type: integer
                            description: Participant duration
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          name:
                            type: string
                            description: Participant display name
                          user_email:
                            type: string
                            description: Participant email
                          user_id:
                            type: string
                            description: Participant ID
        "404":
          description: Meeting not found
          content: {}
  /report/meetings/{meetingId}/polls:
    get:
      tags:
      - Reports
      summary: Retrieve meeting polls report
      description: Retrieve ended meeting polls report
      operationId: reportMeetingPolls
      parameters:
      - name: meetingId
        in: path
        description: "The meeting ID or meeting UUID. If given meeting ID, will take\
          \ the last meeting instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Meeting Polls Report Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Meeting ID
                  questions:
                    type: array
                    description: Array of Meeting question objects
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Participant email
                        name:
                          type: string
                          description: Participant display name
                        question_details:
                          type: array
                          description: Array of questions from user
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: Given answer
                              question:
                                type: string
                                description: Asked question
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Meeting ID
                  questions:
                    type: array
                    description: Array of Meeting question objects
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Participant email
                        name:
                          type: string
                          description: Participant display name
                        question_details:
                          type: array
                          description: Array of questions from user
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: Given answer
                              question:
                                type: string
                                description: Asked question
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
        "404":
          description: Meeting not found
          content: {}
  /report/telephone:
    get:
      tags:
      - Reports
      summary: Retrieve telephone report
      description: Retrieve telephone report for a specified period <aside>Toll Report
        option would be removed.</aside>.
      operationId: reportTelephone
      parameters:
      - name: type
        in: query
        description: Audio type
        schema:
          type: string
          default: "1"
          enum:
          - "1"
          x-enum-descriptions:
          - Toll-free Call-in & Call-out
        x-enum-descriptions:
        - Toll-free Call-in & Call-out
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Telephone Report Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/Pagination'
                - type: object
                  properties:
                    telephony_usage:
                      type: array
                      description: Array of telephony objects
                      items:
                        type: object
                        properties:
                          call_in_number:
                            type: string
                            description: Call in number
                          country_name:
                            type: string
                            description: Country Name
                          dept:
                            type: string
                            description: User department
                          duration:
                            type: integer
                            description: Meeting duration
                          end_time:
                            type: string
                            description: Meeting end time
                            format: date-time
                          host_email:
                            type: string
                            description: User email
                          host_name:
                            type: string
                            description: User display name
                          meeting_id:
                            type: integer
                            description: Meeting ID
                          meeting_type:
                            type: string
                            description: Meeting Type
                          phone_number:
                            type: string
                            description: Telephone Number
                          start_time:
                            type: string
                            description: Meeting start time
                            format: date-time
                          total:
                            type: number
                            description: Total
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/Pagination'
                - type: object
                  properties:
                    telephony_usage:
                      type: array
                      description: Array of telephony objects
                      items:
                        type: object
                        properties:
                          call_in_number:
                            type: string
                            description: Call in number
                          country_name:
                            type: string
                            description: Country Name
                          dept:
                            type: string
                            description: User department
                          duration:
                            type: integer
                            description: Meeting duration
                          end_time:
                            type: string
                            description: Meeting end time
                            format: date-time
                          host_email:
                            type: string
                            description: User email
                          host_name:
                            type: string
                            description: User display name
                          meeting_id:
                            type: integer
                            description: Meeting ID
                          meeting_type:
                            type: string
                            description: Meeting Type
                          phone_number:
                            type: string
                            description: Telephone Number
                          start_time:
                            type: string
                            description: Meeting start time
                            format: date-time
                          total:
                            type: number
                            description: Total
  /report/users:
    get:
      tags:
      - Reports
      summary: Retrieve hosts report
      description: Retrieve active or inactive hosts report for a specified period
      operationId: reportUsers
      parameters:
      - name: type
        in: query
        description: Active hosts or inactive hosts
        schema:
          type: string
          enum:
          - active
          - inactive
          x-enum-descriptions:
          - Active hosts
          - Inactive hosts
        x-enum-descriptions:
        - Active hosts
        - Inactive hosts
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Active/Inactive Hosts Report Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/Pagination'
                - type: object
                  properties:
                    total_meeting_minutes:
                      type: integer
                      description: Number of meeting minutes for this range
                    total_meetings:
                      type: integer
                      description: Number of meetings for this range
                    total_participants:
                      type: integer
                      description: Number of participants for this range
                    users:
                      type: array
                      description: Array of user objects
                      items:
                        type: object
                        properties:
                          dept:
                            type: string
                            description: User department
                          email:
                            type: string
                            description: User email
                          id:
                            type: string
                            description: User ID
                            format: uuid
                          meeting_minutes:
                            type: integer
                            description: Number of meeting minutes for user
                          meetings:
                            type: integer
                            description: Number of meetings for user
                          participants:
                            type: integer
                            description: Number of participants in meetings for user
                          type:
                            type: integer
                            description: User type
                          user_name:
                            type: string
                            description: User display name
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/Pagination'
                - type: object
                  properties:
                    total_meeting_minutes:
                      type: integer
                      description: Number of meeting minutes for this range
                    total_meetings:
                      type: integer
                      description: Number of meetings for this range
                    total_participants:
                      type: integer
                      description: Number of participants for this range
                    users:
                      type: array
                      description: Array of user objects
                      items:
                        type: object
                        properties:
                          dept:
                            type: string
                            description: User department
                          email:
                            type: string
                            description: User email
                          id:
                            type: string
                            description: User ID
                            format: uuid
                          meeting_minutes:
                            type: integer
                            description: Number of meeting minutes for user
                          meetings:
                            type: integer
                            description: Number of meetings for user
                          participants:
                            type: integer
                            description: Number of participants in meetings for user
                          type:
                            type: integer
                            description: User type
                          user_name:
                            type: string
                            description: User display name
  /report/users/{userId}/meetings:
    get:
      tags:
      - Reports
      summary: Retrieve meetings report
      description: Retrieve ended meetings report for a specified period
      operationId: reportMeetings
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Active/Inactive Hosts Report Returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    meetings:
                      type: array
                      description: Array of meeting objects
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Meeting duration
                          end_time:
                            type: string
                            description: Meeting end time
                            format: date-time
                          id:
                            type: integer
                            description: Meeting ID
                          participants_count:
                            type: integer
                            description: Number of meeting participants
                          start_time:
                            type: string
                            description: Meeting start time
                            format: date-time
                          topic:
                            type: string
                            description: Meeting topic
                          total_minutes:
                            type: integer
                            description: Number of meeting minutes
                          type:
                            type: integer
                            description: Meeting type
                          user_email:
                            type: string
                            description: User email
                          user_name:
                            type: string
                            description: User display name
                          uuid:
                            type: string
                            description: Meeting UUID
                            format: uuid
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                    to:
                      type: string
                      description: End date for this report
                      format: date
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    meetings:
                      type: array
                      description: Array of meeting objects
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Meeting duration
                          end_time:
                            type: string
                            description: Meeting end time
                            format: date-time
                          id:
                            type: integer
                            description: Meeting ID
                          participants_count:
                            type: integer
                            description: Number of meeting participants
                          start_time:
                            type: string
                            description: Meeting start time
                            format: date-time
                          topic:
                            type: string
                            description: Meeting topic
                          total_minutes:
                            type: integer
                            description: Number of meeting minutes
                          type:
                            type: integer
                            description: Meeting type
                          user_email:
                            type: string
                            description: User email
                          user_name:
                            type: string
                            description: User display name
                          uuid:
                            type: string
                            description: Meeting UUID
                            format: uuid
        "404":
          description: User not found
          content: {}
  /report/webinars/{webinarId}:
    get:
      tags:
      - Reports
      summary: Retrieve webinar details report
      description: Retrieve ended webinar details report
      operationId: reportWebinarDetails
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Webinar detail Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    type: integer
                    description: Meeting duration
                  end_time:
                    type: string
                    description: Meeting end time
                    format: date-time
                  id:
                    type: integer
                    description: Meeting ID
                  participants_count:
                    type: integer
                    description: Number of meeting participants
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  topic:
                    type: string
                    description: Meeting topic
                  total_minutes:
                    type: integer
                    description: Number of meeting minutes
                  tracking_fields:
                    type: array
                    description: Tracking fields
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type
                        value:
                          type: string
                          description: Tracking fields value
                  type:
                    type: integer
                    description: Meeting type
                  user_email:
                    type: string
                    description: User email
                  user_name:
                    type: string
                    description: User display name
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
            application/xml:
              schema:
                type: object
                properties:
                  duration:
                    type: integer
                    description: Meeting duration
                  end_time:
                    type: string
                    description: Meeting end time
                    format: date-time
                  id:
                    type: integer
                    description: Meeting ID
                  participants_count:
                    type: integer
                    description: Number of meeting participants
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  topic:
                    type: string
                    description: Meeting topic
                  total_minutes:
                    type: integer
                    description: Number of meeting minutes
                  tracking_fields:
                    type: array
                    description: Tracking fields
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type
                        value:
                          type: string
                          description: Tracking fields value
                  type:
                    type: integer
                    description: Meeting type
                  user_email:
                    type: string
                    description: User email
                  user_name:
                    type: string
                    description: User display name
                  uuid:
                    type: string
                    description: Meeting UUID
                    format: uuid
        "404":
          description: Webinar not found
          content: {}
  /report/webinars/{webinarId}/participants:
    get:
      tags:
      - Reports
      summary: Retrieve webinar participants report
      description: Retrieve ended webinar participants report
      operationId: reportWebinarParticipants
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      responses:
        "200":
          description: Meeting Participants Report Returned
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of webinar participant objects
                      items:
                        type: object
                        properties:
                          attentiveness_score:
                            type: string
                            description: Participant attentiveness score
                          duration:
                            type: integer
                            description: Participant duration
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          name:
                            type: string
                            description: Participant display name
                          user_email:
                            type: string
                            description: Participant email
                          user_id:
                            type: string
                            description: Participant ID
            application/xml:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationToken'
                - type: object
                  properties:
                    participants:
                      type: array
                      description: Array of webinar participant objects
                      items:
                        type: object
                        properties:
                          attentiveness_score:
                            type: string
                            description: Participant attentiveness score
                          duration:
                            type: integer
                            description: Participant duration
                          id:
                            type: string
                            description: Participant UUID
                            format: uuid
                          join_time:
                            type: string
                            description: Participant join time
                            format: date-time
                          leave_time:
                            type: string
                            description: Participant leave time
                            format: date-time
                          name:
                            type: string
                            description: Participant display name
                          user_email:
                            type: string
                            description: Participant email
                          user_id:
                            type: string
                            description: Participant ID
        "404":
          description: Webinar not found
          content: {}
  /report/webinars/{webinarId}/polls:
    get:
      tags:
      - Reports
      summary: Retrieve webinar polls report
      description: Retrieve ended webinar polls report
      operationId: reportWebinarPolls
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Webinar Polls Report Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Webinar ID
                  questions:
                    type: array
                    description: Array of webinar question objects
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Participant email
                        name:
                          type: string
                          description: Participant display name
                        question_details:
                          type: array
                          description: Array of questions from user
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: Given answer
                              question:
                                type: string
                                description: Asked question
                  start_time:
                    type: string
                    description: Webinar start time
                    format: date-time
                  uuid:
                    type: string
                    description: Webinar UUID
                    format: uuid
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Webinar ID
                  questions:
                    type: array
                    description: Array of webinar question objects
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Participant email
                        name:
                          type: string
                          description: Participant display name
                        question_details:
                          type: array
                          description: Array of questions from user
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: Given answer
                              question:
                                type: string
                                description: Asked question
                  start_time:
                    type: string
                    description: Webinar start time
                    format: date-time
                  uuid:
                    type: string
                    description: Webinar UUID
                    format: uuid
        "404":
          description: Webinar not found
          content: {}
  /report/webinars/{webinarId}/qa:
    get:
      tags:
      - Reports
      summary: Retrieve webinar Q&A report
      description: Retrieve ended webinar Q&A report
      operationId: reportWebinarQA
      parameters:
      - name: webinarId
        in: path
        description: "The webinar ID or webinar UUID. If given webinar ID, will take\
          \ the last webinar instance."
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Webinar Q&A Report Returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Webinar ID
                  questions:
                    type: array
                    description: Array of webinar question objects
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Participant email
                        name:
                          type: string
                          description: Participant display name
                        question_details:
                          type: array
                          description: Array of questions from user
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: Given answer
                              question:
                                type: string
                                description: Asked question
                  start_time:
                    type: string
                    description: Webinar start time
                    format: date-time
                  uuid:
                    type: string
                    description: Webinar UUID
                    format: uuid
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Webinar ID
                  questions:
                    type: array
                    description: Array of webinar question objects
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: Participant email
                        name:
                          type: string
                          description: Participant display name
                        question_details:
                          type: array
                          description: Array of questions from user
                          items:
                            type: object
                            properties:
                              answer:
                                type: string
                                description: Given answer
                              question:
                                type: string
                                description: Asked question
                  start_time:
                    type: string
                    description: Webinar start time
                    format: date-time
                  uuid:
                    type: string
                    description: Webinar UUID
                    format: uuid
        "404":
          description: Webinar not found
          content: {}
  /tsp:
    get:
      tags:
      - TSP
      summary: Retrieve account's TSP information
      description: Retrieve TSP information on account level
      operationId: tsp
      responses:
        "200":
          description: TSP account detail returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  dial_in_numbers:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Country Code
                        number:
                          type: string
                          description: "Dial-in number, length is less than 16"
                        type:
                          type: string
                  enable:
                    type: boolean
                    description: Enable 3rd party audio conferencing for account users
                  tsp_provider:
                    type: string
                    description: 3rd party audio conferencing provider
            application/xml:
              schema:
                type: object
                properties:
                  dial_in_numbers:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Country Code
                        number:
                          type: string
                          description: "Dial-in number, length is less than 16"
                        type:
                          type: string
                  enable:
                    type: boolean
                    description: Enable 3rd party audio conferencing for account users
                  tsp_provider:
                    type: string
                    description: 3rd party audio conferencing provider
    patch:
      tags:
      - TSP
      summary: Update account's TSP information
      description: Update TSP information on account level
      operationId: tspUpdate
      requestBody:
        description: TSP Account
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: Enable 3rd party audio conferencing for account users
                tsp_provider:
                  type: string
                  description: 3rd party audio conferencing provider
          multipart/form-data:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  description: Enable 3rd party audio conferencing for account users
                tsp_provider:
                  type: string
                  description: 3rd party audio conferencing provider
        required: true
      responses:
        "204":
          description: TSP Account updated
          content: {}
      x-codegen-request-body-name: body
  /users:
    get:
      tags:
      - Users
      summary: List Users
      description: List users on your account
      operationId: users
      parameters:
      - name: status
        in: query
        description: User status
        schema:
          type: string
          default: active
          enum:
          - active
          - inactive
          - pending
          x-enum-descriptions:
          - users with active status
          - users with inactive status
          - users with pending status
        x-enum-descriptions:
        - users with active status
        - users with inactive status
        - users with pending status
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: User list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserList'
    post:
      tags:
      - Users
      summary: Create a user
      description: Create a user on your account
      operationId: userCreate
      requestBody:
        description: User
        content:
          application/json:
            schema:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  description: Specify how to create the new user
                  enum:
                  - create
                  - autoCreate
                  - custCreate
                  - ssoCreate
                  x-enum-descriptions:
                  - User will get an email sent from Zoom. There is a confirmation
                    link in this email. User will then need to click this link to
                    activate their account to the Zoom service. The user can set or
                    change their password in Zoom. <br/>.
                  - This action is provided for enterprise customer who has a managed
                    domain. This feature is disabled by default because of the security
                    risk involved in creating a user who does not belong to your domain
                    without notifying the user. <br/>
                  - This action is provided for API partner only. User created in
                    this way has no password and is not able to log into the Zoom
                    web site or client. <br/>
                  - "This action is provided for enabled \"Pre-provisioning SSO User\"\
                    \ option. User created in this way has no password. If it is not\
                    \ a basic user, will generate a Personal Vanity URL using user\
                    \ name (no domain) of the provisioning email. If user name or\
                    \ pmi is invalid or occupied, will use random number/random personal\
                    \ vanity URL. <br/>"
                user_info:
                  required:
                  - email
                  - type
                  type: object
                  properties:
                    email:
                      maxLength: 128
                      type: string
                      description: User's email address
                    first_name:
                      maxLength: 64
                      type: string
                      description: User's first name. Cannot contain more than 5 Chinese
                        words.
                    last_name:
                      maxLength: 64
                      type: string
                      description: User's last name. Cannot contain more than 5 Chinese
                        words.
                    password:
                      type: string
                      description: User’s password. Only for "autoCreate" action.
                    type:
                      type: integer
                      description: User's type
                      x-enum-descriptions:
                      - basic
                      - pro
                      - corp
          multipart/form-data:
            schema:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  description: Specify how to create the new user
                  enum:
                  - create
                  - autoCreate
                  - custCreate
                  - ssoCreate
                  x-enum-descriptions:
                  - User will get an email sent from Zoom. There is a confirmation
                    link in this email. User will then need to click this link to
                    activate their account to the Zoom service. The user can set or
                    change their password in Zoom. <br/>.
                  - This action is provided for enterprise customer who has a managed
                    domain. This feature is disabled by default because of the security
                    risk involved in creating a user who does not belong to your domain
                    without notifying the user. <br/>
                  - This action is provided for API partner only. User created in
                    this way has no password and is not able to log into the Zoom
                    web site or client. <br/>
                  - "This action is provided for enabled \"Pre-provisioning SSO User\"\
                    \ option. User created in this way has no password. If it is not\
                    \ a basic user, will generate a Personal Vanity URL using user\
                    \ name (no domain) of the provisioning email. If user name or\
                    \ pmi is invalid or occupied, will use random number/random personal\
                    \ vanity URL. <br/>"
                user_info:
                  required:
                  - email
                  - type
                  type: object
                  properties:
                    email:
                      maxLength: 128
                      type: string
                      description: User's email address
                    first_name:
                      maxLength: 64
                      type: string
                      description: User's first name. Cannot contain more than 5 Chinese
                        words.
                    last_name:
                      maxLength: 64
                      type: string
                      description: User's last name. Cannot contain more than 5 Chinese
                        words.
                    password:
                      type: string
                      description: User’s password. Only for "autoCreate" action.
                    type:
                      type: integer
                      description: User's type
                      x-enum-descriptions:
                      - basic
                      - pro
                      - corp
        required: true
      responses:
        "201":
          description: User Created
          headers:
            Content-Location:
              description: Location of created User
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: User's email address
                  first_name:
                    maxLength: 64
                    type: string
                    description: User's first name
                  id:
                    type: string
                    description: User ID
                  last_name:
                    maxLength: 64
                    type: string
                    description: User's last name
                  type:
                    type: integer
                    description: User's type
                    x-enum-descriptions:
                    - basic
                    - pro
                    - corp
            application/xml:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: User's email address
                  first_name:
                    maxLength: 64
                    type: string
                    description: User's first name
                  id:
                    type: string
                    description: User ID
                  last_name:
                    maxLength: 64
                    type: string
                    description: User's last name
                  type:
                    type: integer
                    description: User's type
                    x-enum-descriptions:
                    - basic
                    - pro
                    - corp
        "409":
          description: User with that email already exists
          content: {}
      x-codegen-request-body-name: body
  /users/email:
    get:
      tags:
      - Users
      summary: Check a user's email
      description: Check if the user email exists
      operationId: userEmail
      parameters:
      - name: email
        in: query
        description: Zoom work email
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  existed_email:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  existed_email:
                    type: boolean
  /users/vanity_name:
    get:
      tags:
      - Users
      summary: Check a user's personal meeting room name
      description: Check if the user's personal meeting room name exists
      operationId: userVanityName
      parameters:
      - name: vanity_name
        in: query
        description: Personal meeting room name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  existed:
                    type: boolean
            application/xml:
              schema:
                type: object
                properties:
                  existed:
                    type: boolean
  /users/zpk:
    get:
      tags:
      - Users
      summary: Verify a user's zpk (Deprecated
      description: Check if the zpk is expired. The zpk is used to authenticate a
        user.
      operationId: userZPK
      parameters:
      - name: zpk
        in: query
        description: User zpk
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  expire_in:
                    type: integer
            application/xml:
              schema:
                type: object
                properties:
                  expire_in:
                    type: integer
  /users/{userId}:
    get:
      tags:
      - Users
      summary: Retrieve a user
      description: Retrieve a user on your account
      operationId: user
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: login_type
        in: query
        schema:
          type: string
          enum:
          - "0"
          - "1"
          - "99"
          - "100"
          - "101"
          x-enum-descriptions:
          - Facebook
          - Google
          - API
          - Zoom
          - SSO
        x-enum-descriptions:
        - Facebook
        - Google
        - API
        - Zoom
        - SSO
      responses:
        "200":
          description: User object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: User ID
                - $ref: '#/components/schemas/User'
                - type: object
                  properties:
                    account_id:
                      type: string
                    cms_user_id:
                      type: string
                    group_ids:
                      type: array
                      items:
                        type: string
                    host_key:
                      type: string
                    im_group_ids:
                      type: array
                      items:
                        type: string
                    language:
                      type: string
                    personal_meeting_url:
                      type: string
                    pic_url:
                      type: string
                    use_pmi:
                      type: boolean
                    vanity_url:
                      type: string
                    verified:
                      type: integer
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: User ID
                - $ref: '#/components/schemas/User'
                - type: object
                  properties:
                    account_id:
                      type: string
                    cms_user_id:
                      type: string
                    group_ids:
                      type: array
                      items:
                        type: string
                    host_key:
                      type: string
                    im_group_ids:
                      type: array
                      items:
                        type: string
                    language:
                      type: string
                    personal_meeting_url:
                      type: string
                    pic_url:
                      type: string
                    use_pmi:
                      type: boolean
                    vanity_url:
                      type: string
                    verified:
                      type: integer
        "404":
          description: User not found
          content: {}
    delete:
      tags:
      - Users
      summary: Delete a user
      description: Delete a user on your account
      operationId: userDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: action
        in: query
        description: Delete action type
        schema:
          type: string
          default: disassociate
          enum:
          - disassociate
          - delete
          x-enum-descriptions:
          - Disassociate a user
          - Permanently delete a user
        x-enum-descriptions:
        - Disassociate a user
        - Permanently delete a user
      - name: transfer_email
        in: query
        description: Transfer email
        schema:
          type: string
      - name: transfer_meeting
        in: query
        description: Transfer meeting
        schema:
          type: boolean
      - name: transfer_webinar
        in: query
        description: Transfer webinar
        schema:
          type: boolean
      - name: transfer_recording
        in: query
        description: Transfer recording
        schema:
          type: boolean
      responses:
        "204":
          description: User deleted
          content: {}
        "404":
          description: User not found
          content: {}
    patch:
      tags:
      - Users
      summary: Update a user
      description: Update a user on your account
      operationId: userUpdate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "204":
          description: User updated
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/assistants:
    get:
      tags:
      - Users
      summary: List a user's assistants
      description: List a user's assistants
      operationId: userAssistants
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAssistantsList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserAssistantsList'
        "404":
          description: User not found
          content: {}
    post:
      tags:
      - Users
      summary: Add assistants
      description: Add assistants to a user
      operationId: userAssistantCreate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User assistant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssistantsList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAssistantsList'
        required: true
      responses:
        "201":
          description: Assitant Added
          headers:
            Content-Location:
              description: Location of created assistant
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  add_at:
                    type: string
                    format: date-time
                  ids:
                    type: string
                    description: User ID
            application/xml:
              schema:
                type: object
                properties:
                  add_at:
                    type: string
                    format: date-time
                  ids:
                    type: string
                    description: User ID
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Users
      summary: Delete a user's assistants
      description: Delete all of a user'sassitants
      operationId: userAssistantsDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Assitants deleted
          content: {}
        "404":
          description: User not found
          content: {}
  /users/{userId}/assistants/{assistantId}:
    delete:
      tags:
      - Users
      summary: Delete a user's assistant
      description: Delete one of a user's assistants
      operationId: userAssistantDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: assistantId
        in: path
        description: Assistant's ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Assitant deleted
          content: {}
        "404":
          description: User or Assistant not found
          content: {}
  /users/{userId}/email:
    put:
      tags:
      - Users
      summary: Update a user's email
      description: Update a user's email
      operationId: userEmailUpdate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User email
        content:
          application/json:
            schema:
              required:
              - email
              type: object
              properties:
                email:
                  type: string
                  description: User’s email. Character length is less than 128.
          multipart/form-data:
            schema:
              required:
              - email
              type: object
              properties:
                email:
                  type: string
                  description: User’s email. Character length is less than 128.
        required: true
      responses:
        "204":
          description: email updated
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/meetings:
    get:
      tags:
      - Meetings
      summary: List meetings
      description: List meetings for a user
      operationId: meetings
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: The meeting type
        schema:
          type: string
          default: live
          enum:
          - scheduled
          - live
          - upcoming
          x-enum-descriptions:
          - all the scheduled meetings
          - all the live meetings
          - all the upcoming meetings
        x-enum-descriptions:
        - all the scheduled meetings
        - all the live meetings
        - all the upcoming meetings
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: List of Meeting objects returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeetingList'
        "404":
          description: User not found
          content: {}
    post:
      tags:
      - Meetings
      summary: Create a meeting
      description: "Create a meeting for a user <aside>The expiration time of start_url\
        \ is two hours. But for API users, the expiration time is 90 days.</aside>"
      operationId: meetingCreate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: Meeting object
        content:
          application/json:
            schema:
              allOf:
              - type: object
                properties:
                  schedule_for:
                    type: string
                    description: Email or userId if you want to schedule meeting for
                      another user.
              - $ref: '#/components/schemas/Meeting'
          multipart/form-data:
            schema:
              allOf:
              - type: object
                properties:
                  schedule_for:
                    type: string
                    description: Email or userId if you want to schedule meeting for
                      another user.
              - $ref: '#/components/schemas/Meeting'
        required: true
      responses:
        "201":
          description: Meeting Created
          headers:
            Content-Location:
              description: Location of created Meeting
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of meeting
                    id:
                      type: string
                      description: "Meeting ID, also known as meeting number"
                    uuid:
                      type: string
                      description: Meeting unique ID
                - $ref: '#/components/schemas/MeetingInfo'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of meeting
                    id:
                      type: string
                      description: "Meeting ID, also known as meeting number"
                    uuid:
                      type: string
                      description: Meeting unique ID
                - $ref: '#/components/schemas/MeetingInfo'
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/pac:
    get:
      tags:
      - PAC
      summary: List user's PAC accounts
      description: List user's PAC accounts
      operationId: userPACs
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "200":
          description: PAC Account list returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  tsp_accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PAC'
            application/xml:
              schema:
                type: object
                properties:
                  tsp_accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PAC'
        "404":
          description: User not found
          content: {}
  /users/{userId}/password:
    put:
      tags:
      - Users
      summary: Update a user's password
      description: Update a user's password
      operationId: userPassword
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User password
        content:
          application/json:
            schema:
              required:
              - password
              type: object
              properties:
                password:
                  type: string
                  description: "User’s password. Character length is less than 32,"
          multipart/form-data:
            schema:
              required:
              - password
              type: object
              properties:
                password:
                  type: string
                  description: "User’s password. Character length is less than 32,"
        required: true
      responses:
        "204":
          description: Password updated
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/permissions:
    get:
      tags:
      - Users
      summary: Retrieve a user's permissions
      description: Retrieve a user's permissions
      operationId: userPermission
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User permissions returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermissions'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserPermissions'
        "404":
          description: User not found
          content: {}
  /users/{userId}/picture:
    post:
      tags:
      - Users
      summary: Upload a user's picture
      description: Upload a user's profile picture
      operationId: userPicture
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - pic_file
              type: object
              properties:
                pic_file:
                  type: string
                  description: "User picture file, must be a jpg/jpeg file"
                  format: binary
          multipart/form-data:
            schema:
              required:
              - pic_file
              type: object
              properties:
                pic_file:
                  type: string
                  description: "User picture file, must be a jpg/jpeg file"
                  format: binary
        required: true
      responses:
        "201":
          description: Picture Uploaded
          headers:
            Content-Location:
              description: Location of user's picture
              schema:
                type: string
          content: {}
        "404":
          description: User not found
          content: {}
  /users/{userId}/recordings:
    get:
      tags:
      - Cloud Recording
      summary: List all the recordings
      description: List all the recordings
      operationId: recordingsList
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Start Date
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        description: End Date
        required: true
        schema:
          type: string
          format: date
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: next_page_token
        in: query
        description: Next page token is used to paginate through large result sets.
          A next page token will be returned whenever the set of available results
          exceed the current page size. The expiration period for this token is 15
          minutes.
        schema:
          type: string
      - name: mc
        in: query
        description: 'Query mc '
        schema:
          type: string
          default: "false"
      - name: trash
        in: query
        description: 'Query trash '
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: List of Recording objects returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingMeetingList'
            application/xml:
              schema:
                $ref: '#/components/schemas/RecordingMeetingList'
        "404":
          description: User not found
          content: {}
  /users/{userId}/schedulers:
    get:
      tags:
      - Users
      summary: List a user's schedulers
      description: List a user's schedulers
      operationId: userSchedulers
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchedulersList'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserSchedulersList'
        "404":
          description: User not found
          content: {}
    delete:
      tags:
      - Users
      summary: Delete a user's schedulers
      description: Delete all of a user'schedulers
      operationId: userSchedulersDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Schedulers deleted.
          content: {}
        "404":
          description: User not found
          content: {}
  /users/{userId}/schedulers/{schedulerId}:
    delete:
      tags:
      - Users
      summary: Delete a user's scheduler
      description: Delete one of a user's schedulers
      operationId: userSchedulerDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: schedulerId
        in: path
        description: Scheduler's ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Scheduler deleted.
          content: {}
        "404":
          description: User or Scheduler not found
          content: {}
  /users/{userId}/settings:
    get:
      tags:
      - Users
      summary: Retrieve a user's settings
      description: Retrieve a user's settings
      operationId: userSettings
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: login_type
        in: query
        schema:
          type: string
          enum:
          - "0"
          - "1"
          - "99"
          - "100"
          - "101"
          x-enum-descriptions:
          - Facebook
          - Google
          - API
          - Zoom
          - SSO
        x-enum-descriptions:
        - Facebook
        - Google
        - API
        - Zoom
        - SSO
      responses:
        "200":
          description: User settings returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserSettings'
        "404":
          description: User not found
          content: {}
    patch:
      tags:
      - Users
      summary: Update a user's settings
      description: Update a user's settings
      operationId: userSettingsUpdate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User Settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingsUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSettingsUpdate'
        required: true
      responses:
        "204":
          description: User setting's updated
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/status:
    put:
      tags:
      - Users
      summary: Update a user's status
      description: Update a user's status
      operationId: userStatus
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User status
        content:
          application/json:
            schema:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  description: The action type
                  enum:
                  - activate
                  - deactivate
                  x-enum-descriptions:
                  - set users status to active
                  - set users status to inactive
              description: The action
          multipart/form-data:
            schema:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  description: The action type
                  enum:
                  - activate
                  - deactivate
                  x-enum-descriptions:
                  - set users status to active
                  - set users status to inactive
              description: The action
        required: true
      responses:
        "204":
          description: Status updated
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/token:
    get:
      tags:
      - Users
      summary: Retrieve a user's token
      description: Retrieve a user's token
      operationId: userToken
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: User token type
        schema:
          type: string
          enum:
          - token
          - zpk
          - zak
          x-enum-descriptions:
          - Used for starting meeting with client SDK.
          - Used for generating the start meeting url. (Deprecated)
          - "Used for generating the start meeting url. The expiration time is two\
            \ hours. For API users, the expiration time is 90 days."
        x-enum-descriptions:
        - Used for starting meeting with client SDK.
        - Used for generating the start meeting url. (Deprecated)
        - "Used for generating the start meeting url. The expiration time is two hours.\
          \ For API users, the expiration time is 90 days."
      responses:
        "200":
          description: Token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User ID
            application/xml:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User ID
        "404":
          description: User not found
          content: {}
    delete:
      tags:
      - Users
      summary: Revoke a user's SSO token
      description: Revoke a user's SSO token
      operationId: userSSOTokenDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Token deleted
          content: {}
        "404":
          description: User not found
          content: {}
  /users/{userId}/tsp:
    get:
      tags:
      - TSP
      summary: List user's TSP accounts
      description: List user's TSP accounts
      operationId: userTSPs
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      responses:
        "200":
          description: TSP Account list returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  tsp_accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/TSP'
            application/xml:
              schema:
                type: object
                properties:
                  tsp_accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/TSP'
        "404":
          description: User not found
          content: {}
    post:
      tags:
      - TSP
      summary: Add a user's TSP account
      description: Add a user's TSP account
      operationId: userTSPCreate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: TSP Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TSP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TSP'
        required: true
      responses:
        "201":
          description: TSP Account added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TSP'
            application/xml:
              schema:
                $ref: '#/components/schemas/TSP'
      x-codegen-request-body-name: body
  /users/{userId}/tsp/{tspId}:
    get:
      tags:
      - TSP
      summary: Retrieve a user's TSP account
      description: Retrieve a user's TSP account
      operationId: userTSP
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: tspId
        in: path
        description: TSP account index
        required: true
        schema:
          type: string
      responses:
        "200":
          description: TSP Account returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TSP'
            application/xml:
              schema:
                $ref: '#/components/schemas/TSP'
    delete:
      tags:
      - TSP
      summary: Delete a user's TSP account
      description: Delete a user's TSP account
      operationId: userTSPDelete
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: tspId
        in: path
        description: TSP account index
        required: true
        schema:
          type: string
      responses:
        "204":
          description: TSP Account deleted
          content: {}
    patch:
      tags:
      - TSP
      summary: Update a TSP account
      description: Update a user's TSP account
      operationId: userTSPUpdate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: tspId
        in: path
        description: TSP account index
        required: true
        schema:
          type: string
      requestBody:
        description: TSP Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TSP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TSP'
        required: true
      responses:
        "204":
          description: TSP Account updated
          content: {}
      x-codegen-request-body-name: body
  /users/{userId}/webinars:
    get:
      tags:
      - Webinars
      summary: List webinars
      description: List webinars for a user
      operationId: webinars
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: List of Webinar objects returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarList'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebinarList'
        "404":
          description: User not found
          content: {}
    post:
      tags:
      - Webinars
      summary: Create a webinar
      description: "Create a webinar for a user <aside>The expiration time of start_url\
        \ is two hours. But for API users, the expiration time is 90 days.</aside>"
      operationId: webinarCreate
      parameters:
      - name: userId
        in: path
        description: The user ID or email address
        required: true
        schema:
          type: string
      requestBody:
        description: User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webinar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Webinar'
        required: true
      responses:
        "201":
          description: Webinar Created
          headers:
            Content-Location:
              description: Location of created Webinar
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of Webinar
                    id:
                      type: string
                      description: "Webinar ID, also known as Webinar number"
                    uuid:
                      type: string
                      description: Webinar unique ID
                - $ref: '#/components/schemas/WebinarInfo'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of Webinar
                    id:
                      type: string
                      description: "Webinar ID, also known as Webinar number"
                    uuid:
                      type: string
                      description: Webinar unique ID
                - $ref: '#/components/schemas/WebinarInfo'
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /v2/tracking_fields:
    get:
      tags:
      - TrackingField
      summary: List Tracking Fields.
      description: List Tracking Fields on your Zoom account.
      operationId: trackingfieldList
      responses:
        "200":
          description: List of Tracking Fields returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingFieldList'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrackingFieldList'
    post:
      tags:
      - TrackingField
      summary: Create a Tracking Field
      description: Create a Tracking Field on your Zoom account
      operationId: trackingfieldCreate
      requestBody:
        description: Tracking Field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackingField'
        required: true
      responses:
        "201":
          description: Tracking Field created
          headers:
            Content-Location:
              description: Location of created tracking field
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Tracking Field ID
                - $ref: '#/components/schemas/TrackingField'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Tracking Field ID
                - $ref: '#/components/schemas/TrackingField'
      x-codegen-request-body-name: body
  /v2/tracking_fields/{fieldId}:
    get:
      tags:
      - TrackingField
      summary: Retrieve a tracking field
      description: Retrieve a tracking field
      operationId: trackingfieldGet
      parameters:
      - name: fieldId
        in: path
        description: The Tracking Field ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Tracking Field object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Tracking Field ID
                - $ref: '#/components/schemas/TrackingField'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Tracking Field ID
                - $ref: '#/components/schemas/TrackingField'
        "404":
          description: Tracking Field not found
          content: {}
    delete:
      tags:
      - TrackingField
      summary: Delete a Tracking Field
      description: Delete a Tracking Field on your Zoom account
      operationId: trackingfieldDelete
      parameters:
      - name: fieldId
        in: path
        description: The Tracking Field ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Tracking Field deleted
          content: {}
        "404":
          description: Tracking Field not found
          content: {}
    patch:
      tags:
      - TrackingField
      summary: Update a Tracking Field
      description: Update a Tracking Field on your Zoom account
      operationId: trackingfieldUpdate
      parameters:
      - name: fieldId
        in: path
        description: The Tracking Field ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackingField'
        required: true
      responses:
        "204":
          description: Tracking Field updated
          content: {}
        "404":
          description: Tracking Field not found
          content: {}
      x-codegen-request-body-name: body
  /webhooks:
    get:
      tags:
      - Webhooks
      summary: List webhooks
      description: List webhooks for a account
      operationId: webhooks
      responses:
        "200":
          description: List of Webhook objects returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookList'
        "404":
          description: Webhook not found
          content: {}
    post:
      tags:
      - Webhooks
      summary: Create a webhook
      description: Create a webhook for a account
      operationId: webhookCreate
      requestBody:
        description: Webhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        "201":
          description: Webhook Created
          headers:
            Content-Location:
              description: Location of created Webhook
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    webhook_id:
                      type: string
                      description: Webhook Id
                - $ref: '#/components/schemas/Webhook'
                - type: object
                  properties:
                    created_at:
                      type: string
                      description: Webhook create time
                      format: date-time
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    webhook_id:
                      type: string
                      description: Webhook Id
                - $ref: '#/components/schemas/Webhook'
                - type: object
                  properties:
                    created_at:
                      type: string
                      description: Webhook create time
                      format: date-time
        "404":
          description: Account not found
          content: {}
      x-codegen-request-body-name: body
  /webhooks/options:
    patch:
      tags:
      - Webhooks
      summary: Switch webhook version
      description: Switch webhook version
      operationId: webhookSwitch
      requestBody:
        content:
          application/json:
            schema:
              required:
              - version
              type: object
              properties:
                version:
                  type: string
                  enum:
                  - v1
                  - v2
                  x-enum-descriptions:
                  - Version 1
                  - Version 2
          multipart/form-data:
            schema:
              required:
              - version
              type: object
              properties:
                version:
                  type: string
                  enum:
                  - v1
                  - v2
                  x-enum-descriptions:
                  - Version 1
                  - Version 2
        required: true
      responses:
        "204":
          description: Webhook Subscribe version update
          content: {}
        "404":
          description: Webhook Subscribe not found
          content: {}
      x-codegen-request-body-name: body
  /webhooks/{webhookId}:
    get:
      tags:
      - Webhooks
      summary: Retrieve a webhook
      description: Retrieve a webhook
      operationId: webhook
      parameters:
      - name: webhookId
        in: path
        description: The webhook ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Webhook object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    webhook_id:
                      type: string
                      description: Webhook Id
                - $ref: '#/components/schemas/Webhook'
                - type: object
                  properties:
                    created_at:
                      type: string
                      description: Webhook create time
                      format: date-time
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    webhook_id:
                      type: string
                      description: Webhook Id
                - $ref: '#/components/schemas/Webhook'
                - type: object
                  properties:
                    created_at:
                      type: string
                      description: Webhook create time
                      format: date-time
        "404":
          description: Webinar not found
          content: {}
    delete:
      tags:
      - Webhooks
      summary: Delete a webhook
      description: Delete a webhook
      operationId: webhookDelete
      parameters:
      - name: webhookId
        in: path
        description: The webhook ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Webhook deleted
          content: {}
        "404":
          description: Webhook not found
          content: {}
    patch:
      tags:
      - Webhooks
      summary: Update a webhook
      description: Update a webhook
      operationId: webhookUpdate
      parameters:
      - name: webhookId
        in: path
        description: The webhook ID
        required: true
        schema:
          type: string
      requestBody:
        description: Webhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookUpdate'
        required: true
      responses:
        "204":
          description: Webhook Updated
          content: {}
        "404":
          description: Webhook not found
          content: {}
      x-codegen-request-body-name: body
  /webinars/{webinarId}:
    get:
      tags:
      - Webinars
      summary: Retrieve a webinar
      description: Retrieve a webinar
      operationId: webinar
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Webinar object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of webinar
                    id:
                      type: string
                      description: "Webinar ID, also know as webinar number"
                    uuid:
                      type: string
                      description: Webinar unique ID
                - $ref: '#/components/schemas/WebinarInfo'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    host_id:
                      type: string
                      description: ID of the user set as host of webinar
                    id:
                      type: string
                      description: "Webinar ID, also know as webinar number"
                    uuid:
                      type: string
                      description: Webinar unique ID
                - $ref: '#/components/schemas/WebinarInfo'
        "404":
          description: Webinar not found
          content: {}
    delete:
      tags:
      - Webinars
      summary: Delete a webinar
      description: Delete a webinar
      operationId: webinarDelete
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: occurrence_id
        in: query
        description: The meeting occurrence ID
        schema:
          type: string
      responses:
        "204":
          description: Webinar deleted
          content: {}
        "404":
          description: Webinar not found
          content: {}
    patch:
      tags:
      - Webinars
      summary: Update a webinar
      description: Update a webinar
      operationId: webinarUpdate
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Webinar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebinarUpdate'
        required: true
      responses:
        "204":
          description: Webinar Updated
          content: {}
        "404":
          description: Webinar not found
          content: {}
      x-codegen-request-body-name: body
  /webinars/{webinarId}/panelists:
    get:
      tags:
      - Webinars
      summary: List a webinar's panelists
      description: List panelists for a webinar
      operationId: webinarPanelists
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarPanelistList'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebinarPanelistList'
        "404":
          description: Webinar not found
          content: {}
    post:
      tags:
      - Webinars
      summary: Add a webinar panelist
      description: Add panelist to webinar
      operationId: webinarPanelistCreate
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarPanelist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebinarPanelist'
        required: true
      responses:
        "201":
          description: Panelist created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Panelist ID
                  join_url:
                    type: string
                    description: Join URL for this panelist
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Panelist ID
                  join_url:
                    type: string
                    description: Join URL for this panelist
        "404":
          description: Webinar not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Webinars
      summary: Remove a webinar's panelists
      description: Remove all panelists from a webinar
      operationId: webinarPanelistsDelete
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Panelists removed
          content: {}
        "404":
          description: Webinar not found
          content: {}
  /webinars/{webinarId}/panelists/{panelistId}:
    delete:
      tags:
      - Webinars
      summary: Remove a webinar panelist
      description: Remove a panelist from a webinar
      operationId: webinarPanelistDelete
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: panelistId
        in: path
        description: The panelist ID
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: Panelists removed
          content: {}
        "404":
          description: Webinar or Panelist not found
          content: {}
  /webinars/{webinarId}/polls:
    get:
      tags:
      - Webinars
      summary: 'List a webinar''s polls '
      description: List polls of a webinar
      operationId: webinarPolls
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List polls of a Webinar  returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PollList'
        "404":
          description: Webinar not found
          content: {}
    post:
      tags:
      - Webinars
      summary: Create a webinar's poll
      description: Create a poll for a webinar
      operationId: webinarPollCreate
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      requestBody:
        description: Webinar poll object
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
        required: true
      responses:
        "201":
          description: Webinar Poll Created
          headers:
            Content-Location:
              description: Location of created Webinar Poll
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Poll ID
                    status:
                      type: string
                      description: Status of the Webinar Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Poll ID
                    status:
                      type: string
                      description: Status of the Webinar Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
        "404":
          description: Webinar not found
          content: {}
      x-codegen-request-body-name: body
  /webinars/{webinarId}/polls/{pollId}:
    get:
      tags:
      - Webinars
      summary: Retrieve a webinar's poll
      description: Retrieve a webinar's poll
      operationId: webinarPollGet
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: pollId
        in: path
        description: The poll ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Webinar Poll object returned
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Poll ID
                    status:
                      type: string
                      description: Status of the Webinar Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
            application/xml:
              schema:
                allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Poll ID
                    status:
                      type: string
                      description: Status of the Webinar Poll
                      enum:
                      - notstart
                      - started
                      - ended
                      - sharing
                      x-enum-descriptions:
                      - Poll not start
                      - Poll started
                      - Poll ended
                      - Poll is sharing
                - $ref: '#/components/schemas/Poll'
        "404":
          description: Webinar Poll not found
          content: {}
    put:
      tags:
      - Webinars
      summary: Update a webinar's poll
      description: Update a webinar's poll
      operationId: webinarPollUpdate
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: pollId
        in: path
        description: The poll ID
        required: true
        schema:
          type: string
      requestBody:
        description: Webinar Poll
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Poll'
        required: true
      responses:
        "204":
          description: Webinar Poll Updated
          content: {}
        "404":
          description: Webinar Poll not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Webinars
      summary: Delete a webinar's Poll
      description: Delete a webinar's Poll
      operationId: webinarPollDelete
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: pollId
        in: path
        description: The poll ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Webinar Poll deleted
          content: {}
        "404":
          description: Webinar Poll not found
          content: {}
  /webinars/{webinarId}/registrants:
    get:
      tags:
      - Webinars
      summary: List a webinar's registrants
      description: List registrants for a webinar
      operationId: webinarRegistrants
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: occurrence_id
        in: query
        description: The meeting occurrence ID
        schema:
          type: string
      - name: status
        in: query
        description: The registrant status
        schema:
          type: string
          default: approved
          enum:
          - pending
          - approved
          - denied
          x-enum-descriptions:
          - registrants status is pending
          - registrants status is approved
          - registrants status is denied
        x-enum-descriptions:
        - registrants status is pending
        - registrants status is approved
        - registrants status is denied
      - name: page_size
        in: query
        description: The number of records returned within a single API call
        schema:
          maximum: 300
          type: integer
          default: 30
      - name: page_number
        in: query
        description: Current page number of returned records
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarRegistrantList'
            application/xml:
              schema:
                $ref: '#/components/schemas/WebinarRegistrantList'
        "404":
          description: Webinar not found
          content: {}
    post:
      tags:
      - Webinars
      summary: Add a webinar registrant
      description: Add a registrant for a webinar
      operationId: webinarRegistrantCreate
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: occurrence_ids
        in: query
        description: "Occurrence IDs, could get this value from Webinar Get API. Multiple\
          \ value separated by comma."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarRegistrant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebinarRegistrant'
        required: true
      responses:
        "201":
          description: Registration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Registrant ID
                  join_url:
                    type: string
                    description: Join URL for this registrant
                  registrant_id:
                    type: string
                    description: Registrant ID
                  start_time:
                    type: string
                    description: Start time
                    format: date-time
                  topic:
                    type: string
                    description: Topic
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Registrant ID
                  join_url:
                    type: string
                    description: Join URL for this registrant
                  registrant_id:
                    type: string
                    description: Registrant ID
                  start_time:
                    type: string
                    description: Start time
                    format: date-time
                  topic:
                    type: string
                    description: Topic
        "404":
          description: Webinar not found
          content: {}
      x-codegen-request-body-name: body
  /webinars/{webinarId}/registrants/status:
    put:
      tags:
      - Webinars
      summary: Update a webinar registrant's status
      description: Update a webinar registrant's status
      operationId: webinarRegistrantStatus
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      - name: occurrence_id
        in: query
        description: The meeting occurrence ID
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - approve
                  - cancel
                  - deny
                  x-enum-descriptions:
                  - Approve registrant
                  - Cancel registrant
                  - Deny registrant
                registrants:
                  type: array
                  description: List of registrants
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                      id:
                        type: string
          multipart/form-data:
            schema:
              required:
              - action
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - approve
                  - cancel
                  - deny
                  x-enum-descriptions:
                  - Approve registrant
                  - Cancel registrant
                  - Deny registrant
                registrants:
                  type: array
                  description: List of registrants
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                      id:
                        type: string
        required: true
      responses:
        "204":
          description: Registrant status updated
          content: {}
        "404":
          description: Webinar or Registrant not found
          content: {}
      x-codegen-request-body-name: body
  /webinars/{webinarId}/status:
    put:
      tags:
      - Webinars
      summary: Update a webinar's status
      description: Update a webinar's status
      operationId: webinarStatus
      parameters:
      - name: webinarId
        in: path
        description: The webinar ID
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - end
                  x-enum-descriptions:
                  - end a webinar
          multipart/form-data:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - end
                  x-enum-descriptions:
                  - end a webinar
        required: true
      responses:
        "204":
          description: Webinar updated
          content: {}
        "404":
          description: Webinar not found
          content: {}
      x-codegen-request-body-name: body
components:
  schemas:
    Account:
      required:
      - email
      - first_name
      - last_name
      - password
      type: object
      properties:
        email:
          type: string
          description: User's email address
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        options:
          $ref: '#/components/schemas/AccountOptions'
        password:
          type: string
          description: User's password
      description: "The account object represents an account on zoom. The person who\
        \ created the account, or who the account was created for, is referred to\
        \ as the account owner. You can read more about the Zoom account structure\
        \ <a href='https://developer.zoom.us/blog/a-brief-look-at-zoom-account-structures/'\
        \ target='_blank'>here</a>."
    AccountList:
      title: Account List
      description: List of Accounts
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - $ref: '#/components/schemas/AccountListItem'
    AccountListItem:
      type: object
      properties:
        accounts:
          type: array
          description: List of Account objects
          items:
            type: object
            properties:
              account_name:
                type: string
                description: Account name
              account_type:
                type: string
                description: Account type
              created_at:
                type: string
                description: Account creation date/time
                format: date-time
              id:
                type: string
                description: Account ID
                format: uuid
              owner_email:
                type: string
                description: Account owner email
              seats:
                type: integer
                description: Account seats
              subscription_end_time:
                type: string
                description: Account subscription end date/time
                format: date-time
              subscription_start_time:
                type: string
                description: Account subscription start date/time
                format: date-time
      description: Account object in account list
    AccountOptions:
      type: object
      properties:
        meeting_connectors:
          type: string
          description: "Meeting Connector, multiple values separated by comma"
        pay_mode:
          type: string
          description: Payee
          default: master
          enum:
          - master
          - sub
          x-enum-descriptions:
          - Master account holder pays
          - Sub account holder pays
        room_connectors:
          type: string
          description: "Virtual Room Connector, multiple value separated by comma"
        share_mc:
          type: boolean
          description: Enable Share Meeting Connector
          default: false
        share_rc:
          type: boolean
          description: Enable Share Virtual Room Connector
          default: false
      description: Account options object
    AccountPlan:
      type: object
      properties:
        hosts:
          type: integer
          description: Account plan number of hosts
        type:
          type: string
          description: Account <a href="#plans">plan type</a>
      description: Account plan object
    AccountPlanBaseRequired:
      required:
      - hosts
      - type
      type: object
      properties:
        hosts:
          type: integer
          description: "Account base plan number of hosts. For a Pro Plan, please\
            \ select a value between 1 and 9. For a Business Plan, please select a\
            \ value between 10 and 49. For a Education Plan, please select a value\
            \ between 20 and 149. For a Free Trial Plan, please select a value between\
            \ 1 and 9999."
        type:
          type: string
          description: Account base <a href="#plans">plan type</a>
      description: Account base plan object
    AccountPlanRequired:
      required:
      - hosts
      - type
      type: object
      properties:
        hosts:
          type: integer
          description: Account plan number of hosts
        type:
          type: string
          description: Account <a href="#plans">plan type</a>
      description: Account plan object
    AccountPlans:
      type: object
      properties:
        plan_audio:
          type: object
          properties:
            callout_countries:
              type: string
              description: "Call-out countries, multiple value separated by comma"
            ddi_numbers:
              type: integer
              description: Dedicated Dial-In Numbers
            premium_countries:
              type: string
              description: "Premium countries, multiple value separated by comma"
            tollfree_countries:
              type: string
              description: "Toll-free countries, multiple value separated by comma"
            type:
              type: string
              description: Additional Audio Conferencing <a href="#plans">plan type</a>
          description: Additional Audio Conferencing <a href="#plans">plan type</a>
        plan_base:
          $ref: '#/components/schemas/AccountPlanBaseRequired'
        plan_large_meeting:
          type: array
          description: Additional Large Meeting Plans
          items:
            $ref: '#/components/schemas/AccountPlan'
        plan_recording:
          type: string
          description: Additional Cloud Recording Plan
        plan_room_connector:
          $ref: '#/components/schemas/AccountPlan'
        plan_webinar:
          type: array
          description: Additional Webinar Plans
          items:
            $ref: '#/components/schemas/AccountPlan'
        plan_zoom_rooms:
          $ref: '#/components/schemas/AccountPlan'
      description: Account Plans object
    AccountSettings:
      title: Account settings
      type: object
      properties:
        email_notification:
          $ref: '#/components/schemas/AccountSettingsEmailNotification'
        feature:
          $ref: '#/components/schemas/AccountSettingsFeature'
        in_meeting:
          $ref: '#/components/schemas/AccountSettingsInMeeting'
        integration:
          $ref: '#/components/schemas/AccountSettingsIntegration'
        recording:
          $ref: '#/components/schemas/AccountSettingsRecording'
        schedule_meting:
          $ref: '#/components/schemas/AccountSettingsScheduleMeeting'
        security:
          $ref: '#/components/schemas/AccountSettingsSecurity'
        telephony:
          $ref: '#/components/schemas/AccountSettingsTelephony'
        zoom_rooms:
          $ref: '#/components/schemas/AccountSettingsZoomRooms'
    AccountSettingsEmailNotification:
      type: object
      properties:
        alternative_host_reminder:
          type: boolean
          description: Notify when an alternative host is set or removed from a meeting
        cancel_meeting_reminder:
          type: boolean
          description: Notify host and participants when the meeting is cancelled
        cloud_recording_avaliable_reminder:
          type: boolean
          description: Notify host when cloud recording is available
        jbh_reminder:
          type: boolean
          description: Notify host when participants join the meeting before them
        low_host_count_reminder:
          type: boolean
          description: Notify when host licenses are running low
      description: "Account Settings: Notification"
    AccountSettingsFeature:
      type: object
      properties:
        meeting_capacity:
          type: integer
          description: Set the maximum number of participants this user can have in
            a single meeting
      description: "Account Settings: Feature"
    AccountSettingsInMeeting:
      type: object
      properties:
        alert_guest_join:
          type: boolean
          description: Identify guest participants in the meeting/webinar
        allow_live_streaming:
          type: boolean
          description: Allow live streaming
        allow_show_zoom_windows:
          type: boolean
          description: Show Zoom Desktop application when sharing screen
        annotation:
          type: boolean
          description: Allow participants to use annotation tools to add information
            to shared screens
        anonymous_question_answer:
          type: boolean
          description: Allow Anonymous Q&A in Webinar
        attendee_on_hold:
          type: boolean
          description: Allow hosts to temporarily remove an attendee from the meeting
        attention_tracking:
          type: boolean
          description: Lets the host see an indicator in the participant panel if
            a meeting/webinar attendee does not have Zoom in focus during screen sharing
        auto_answer:
          type: boolean
          description: Enable users to see and add contacts to 'auto-answer group'
            in the contact list on chat. Any call from members of this group will
            be automatically answered.
        auto_saving_chat:
          type: boolean
          description: Automatically save all in-meeting chats so that hosts do not
            need to manually save the text of the chat after the meeting starts
        breakout_room:
          type: boolean
          description: "Allow host to split meeting participants into separate, smaller\
            \ rooms"
        chat:
          type: boolean
          description: Allow meeting participants to send a message visible to all
            participants
        closed_caption:
          type: boolean
          description: Allow host to type closed captions or assign a participant/third
            party device to add closed captions
        co_host:
          type: boolean
          description: Allow the host to add co-hosts
        custom_live_streaming:
          type: boolean
          description: Custom live streaming
        custom_service_instructions:
          type: string
          description: Custom service instructions
        dscp_audio:
          maximum: 63
          minimum: 1
          type: integer
          description: DSCP Audio
        dscp_marking:
          type: boolean
          description: DSCP marking
        dscp_video:
          maximum: 63
          minimum: 1
          type: integer
          description: DSCP Video
        e2e_encryption:
          type: boolean
          description: Require that all meetings are encrypted using AES
        far_end_camera_control:
          type: boolean
          description: Allow another user to take control of your camera during a
            meeting
        feedback:
          type: boolean
          description: "Add a Feedback tab to the Windows Settings or Mac Preferences\
            \ dialog, and also enable users to provide feedback to Zoom at the end\
            \ of the meeting"
        file_transfer:
          type: boolean
          description: Hosts and participants can send files through the in-meeting
            chat
        group_hd:
          type: boolean
          description: Activate higher quality video for host and participants. (This
            will use more bandwidth.)
        original_audio:
          type: boolean
          description: Allow users to select original sound in their client settings
        p2p_connetion:
          type: boolean
          description: Peer to Peer connection while only 2 people are in a meeting
        p2p_ports:
          type: boolean
          description: P2P listening ports range
        polling:
          type: boolean
          description: Add 'Polls' to the meeting controls.
        ports_range:
          type: string
          description: "Listening ports range, separated by comma (ex 55,56). The\
            \ ports range must be between 1 to 65535."
          default: ""
        post_meeting_feedback:
          type: boolean
          description: Display a thumbs up/down survey at the end of each meeting
        private_chat:
          type: boolean
          description: Allow meeting participants to send a private 1:1 message to
            another participants
        remote_control:
          type: boolean
          description: Allow users to request remote control
        screen_sharing:
          type: boolean
          description: Allow screen sharing
        sending_default_email_invites:
          type: boolean
          description: Only show default email when sending email invites
        show_meeting_control_toolbar:
          type: boolean
          description: Always show meeting control toolbar
        stereo_audio:
          type: boolean
          description: Allow users to select stereo audio in their client settings
        use_html_format_email:
          type: boolean
          description: Use HTML format email for Outlook plugin
        virtual_background:
          type: boolean
          description: Allow users to replace their background with any selected image.
            Choose or upload an image in the Zoom Desktop application settings.
        watermark:
          type: boolean
          description: Add watermark when viewing shared screen
        webinar_question_answer:
          type: boolean
          description: Q&A in webinar
        whiteboard:
          type: boolean
          description: Allow participants to share a whiteboard that includes annotation
            tools
        workplace_by_facebook:
          type: boolean
          description: Workplace by facebook
      description: "Account Settings: In Meeting"
    AccountSettingsIntegration:
      type: object
      properties:
        box:
          type: boolean
          description: Enables users who join a meeting from their mobile device to
            share content from their Box account
        dropbox:
          type: boolean
          description: Enables users who join a meeting from their mobile device to
            share content from their Dropbox account
        google_calendar:
          type: boolean
          description: Enables meetings to be scheduled using Google Calendars
        google_drive:
          type: boolean
          description: Enables users who join a meeting from their mobile device to
            share content from their Google Drive
        kubi:
          type: boolean
          description: Enables users to control a connected Kubi device from within
            a Zoom meeting
        microsoft_one_drive:
          type: boolean
          description: Enables users who join a meeting from their mobile device to
            share content from their Microsoft OneDrive account
      description: "Account Settings: Integration"
    AccountSettingsRecording:
      type: object
      properties:
        account_user_access_recording:
          type: boolean
          description: Cloud recordings are only accessible to account members. People
            outside of your organization cannot open links that provide access to
            cloud recordings.
        auto_delete_cmr:
          type: boolean
          description: Allow Zoom to automatically delete recordings permanently after
            a specified number of days
        auto_delete_cmr_days:
          type: integer
          description: When `auto_delete_cmr` is 'true' this value will set the number
            of days before auto deletion of cloud recordings
        auto_recording:
          type: string
          description: Record meetings automatically as they start
          enum:
          - local
          - cloud
          - none
          x-enum-descriptions:
          - Record on local
          - Record on cloud
          - Disabled
        cloud_recording:
          type: boolean
          description: Allow hosts to record and save the meeting in the cloud
        cloud_recording_download:
          type: boolean
          description: Cloud Recording Downloads
        cloud_recording_download_host:
          type: boolean
          description: Only the host can download cloud recordings
        local_recording:
          type: boolean
          description: Allow hosts and participants to record the meeting to a local
            file
        record_audio_file:
          type: boolean
          description: Record an audio only file
        record_gallery_view:
          type: boolean
          description: Record gallery view with shared screen
        record_speaker_view:
          type: boolean
          description: Record active speaker with shared screen
        recording_audio_transcript:
          type: boolean
          description: Automatically transcribe the audio of the meeting or webinar
            to the cloud
        save_chat_text:
          type: boolean
          description: Save chat text from the meeting
        show_timestamp:
          type: boolean
          description: Add a timestamp to the recording
      description: "Account Settings: Recording"
    AccountSettingsScheduleMeeting:
      type: object
      properties:
        audio_type:
          type: string
          description: Determine how participants can join the audio portion of the
            meeting
          default: both
          enum:
          - both
          - telephony
          - voip
          - thirdParty
          x-enum-descriptions:
          - Telephony and VoIP
          - Audio PSTN telephony only
          - VoIP only
          - 3rd party audio conference
        enforce_login:
          type: boolean
          description: Only signed-in (Zoom users) users can join meetings
        enforce_login_domains:
          type: string
          description: Only signed-in users with a specified domains
        enforce_login_with_domains:
          type: boolean
          description: Only signed-in users with a specific domain can join meetings
        force_pmi_jbh_password:
          type: boolean
          description: Require a password for Personal Meetings if attendees can join
            before host
        host_video:
          type: boolean
          description: Start meetings with host video on
        join_before_host:
          type: boolean
          description: Allow participants to join the meeting before the host arrives
        not_store_meeting_topic:
          type: boolean
          description: Always display "Zoom Meeting" as the meeting topic
        participant_video:
          type: boolean
          description: Start meetings with participant video on. Participants can
            change this during the meeting.
      description: "Account Settings: Schedule Meeting"
    AccountSettingsSecurity:
      type: object
      properties:
        admin_change_name_pic:
          type: boolean
          description: Only account administrators can change user's username and
            picture
        hide_billing_info:
          type: boolean
          description: Hide billing information
        import_photos_from_devices:
          type: boolean
          description: Allow importing of photos from photo library on the user's
            device
      description: "Account Settings: Security"
    AccountSettingsTelephony:
      type: object
      properties:
        audio_conference_info:
          type: string
          description: 3rd party audio conference info
        third_party_audio:
          type: boolean
          description: Users can join the meeting using the existing 3rd party audio
            configuration
      description: "Account Settings: Telephony"
    AccountSettingsZoomRooms:
      type: object
      properties:
        auto_start_stop_scheduled_meetings:
          type: boolean
          description: Automatic start/stop for scheduled meetings
        cmr_for_instant_meeting:
          type: boolean
          description: Cloud recording for instant meetings
        force_private_meeting:
          type: boolean
          description: Transform all meetings to private
        hide_host_information:
          type: boolean
          description: Hide host and meeting ID from private meetings
        list_meetings_with_calendar:
          type: boolean
          description: Display meeting list with calendar integration
        start_airplay_manually:
          type: boolean
          description: Start AirPlay service manually
        ultrasonic:
          type: boolean
          description: Automatic direct sharing using ultrasonic proximity signal
        upcoming_meeting_alert:
          type: boolean
          description: Upcoming meeting alert
        weekly_system_restart:
          type: boolean
          description: Weekly system restart
        zr_post_meeting_feedback:
          type: boolean
          description: Zoom Room post meeting feedback
      description: "Account Settings: Zoom Rooms"
    BillingContact:
      type: object
      properties:
        address:
          type: string
          description: Billing Contact's address
        apt:
          type: string
          description: Billing Contact's apartment/suite
        city:
          type: string
          description: Billing Contact's city
        country:
          type: string
          description: Billing Contact's country
        email:
          type: string
          description: Billing Contact's email address
        first_name:
          type: string
          description: Billing Contact's first name
        last_name:
          type: string
          description: Billing Contact's last name
        phone_number:
          type: string
          description: Billing Contact's phone number
        state:
          type: string
          description: Billing Contact's state
        zip:
          type: string
          description: Billing Contact's zip/postal code
      description: Billing Contact object
    BillingContactRequired:
      required:
      - address
      - city
      - country
      - email
      - first_name
      - last_name
      - phone_number
      - state
      - zip
      type: object
      properties:
        address:
          type: string
          description: Billing Contact's address
        apt:
          type: string
          description: Billing Contact's apartment/suite
        city:
          type: string
          description: Billing Contact's city
        country:
          type: string
          description: Billing Contact's country
        email:
          type: string
          description: Billing Contact's email address
        first_name:
          type: string
          description: Billing Contact's first name
        last_name:
          type: string
          description: Billing Contact's last name
        phone_number:
          type: string
          description: Billing Contact's phone number
        state:
          type: string
          description: Billing Contact's state
        zip:
          type: string
          description: Billing Contact's zip/postal code
      description: Billing Contact object
    CustomQuestion:
      type: object
      properties:
        title:
          type: string
        value:
          type: string
      description: Custom Question
    DateTime:
      type: object
      properties:
        from:
          type: string
          description: "Start Date,"
          format: date
        to:
          type: string
          description: End Date
          format: date
      description: DateTime Object
    Device:
      title: The H.323/SIP device object.
      required:
      - encryption
      - ip
      - name
      - protocol
      type: object
      properties:
        encryption:
          type: string
          description: Device encryption
          enum:
          - auto
          - "yes"
          - "no"
          x-enum-descriptions:
          - auto
          - "yes"
          - "no"
        ip:
          type: string
          description: Device Ip
        name:
          maxLength: 64
          type: string
          description: Device name
        protocol:
          type: string
          description: Device protocol
          enum:
          - H.323
          - SIP
          x-enum-descriptions:
          - H.323
          - SIP
      description: The H.323/SIP device object.
    DeviceList:
      title: H.323/SIP Device List
      description: List of H.323/SIP Devices
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          devices:
            type: array
            description: List of H.323/SIP Device objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Device ID
              - $ref: '#/components/schemas/Device'
    DomainsList:
      type: object
      properties:
        domains:
          type: array
          description: List of Managed Domains objects
          items:
            type: object
            allOf:
            - type: object
              properties:
                domain:
                  type: string
                  description: Domain Name
                status:
                  type: string
                  description: Domain Status
        total_records:
          type: integer
          description: Total records
      description: List of Managed Domains
    Group:
      type: object
      properties:
        name:
          type: string
          description: Group name
        total_members:
          type: integer
          description: Total number of members in this group
      description: Group object
    GroupList:
      type: object
      properties:
        groups:
          type: array
          description: List of Group objects
          items:
            type: object
            allOf:
            - type: object
              properties:
                id:
                  type: string
                  description: Group ID
            - $ref: '#/components/schemas/Group'
        total_records:
          type: integer
          description: Total records
      description: List of Groups
    GroupMember:
      type: object
      properties:
        email:
          type: string
          description: User email
        first_name:
          type: string
          description: User first name
        id:
          type: string
          description: User ID
        last_name:
          type: string
          description: User last name
        type:
          type: integer
          description: User type
      description: Group member object
    GroupMemberList:
      title: Group Member List
      description: List of Group Members
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          members:
            type: array
            description: List of Group member objects
            items:
              $ref: '#/components/schemas/GroupMember'
    IMGroup:
      description: IM Group object
      allOf:
      - $ref: '#/components/schemas/Group'
      - type: object
        properties:
          search_by_account:
            type: boolean
            description: Members can search others under same account
          search_by_domain:
            type: boolean
            description: Members can search others in the same email domain
          search_by_ma_account:
            type: boolean
            description: "Members can search others under same master account, including\
              \ all sub accounts"
          type:
            type: string
            description: IM Group type
            default: normal
            enum:
            - normal
            - shared
            - restricted
            x-enum-descriptions:
            - Only members can see the group automatically. Other people can search
              members in the group.
            - All people in the account can see the group and members automatically
            - Nobody can see the group or search members except the members in the
              group
    IMGroupList:
      title: IM Group List
      description: List of IM Groups
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          groups:
            type: array
            description: List of Group objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: IM Group ID
              - $ref: '#/components/schemas/IMGroup'
    Meeting:
      description: Meeting object
      allOf:
      - $ref: '#/components/schemas/Session'
    MeetingInfo:
      type: object
      properties:
        agenda:
          type: string
          description: Agenda
        created_at:
          type: string
          description: Create time
          format: date-time
        duration:
          type: integer
          description: Meeting duration
        h323_password:
          type: string
          description: H.323/SIP room system password
        join_url:
          type: string
          description: Join url
        occurrences:
          $ref: '#/components/schemas/Occurrences'
        password:
          type: string
          description: Meeting password
        settings:
          $ref: '#/components/schemas/MeetingSettings'
        start_time:
          type: string
          description: Meeting start time
          format: date-time
        start_url:
          type: string
          description: Start url
        timezone:
          type: string
          description: Timezone to format start_time
        topic:
          type: string
          description: Meeting topic
        tracking_fields:
          type: array
          description: Tracking fields
          items:
            type: object
            properties:
              field:
                type: string
                description: Tracking fields type
              value:
                type: string
                description: Tracking fields value
        type:
          type: integer
          description: Meeting Type
          x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      description: Meeting object
    MeetingInstances:
      title: Meeting instances
      description: List of Meetings
      allOf:
      - type: object
        properties:
          meetings:
            type: array
            description: List of ended meeting instances.
            items:
              type: object
              allOf:
              - type: object
                properties:
                  start_time:
                    type: string
                    description: Start time
                    format: date-time
                  uuid:
                    type: string
                    description: MeetingUUID
    MeetingInvitation:
      title: Meeting Invitation
      type: object
      properties:
        invitation:
          type: string
          description: Meeting invitation
      description: Meeting invitation details
    MeetingList:
      title: Group List
      description: List of Meetings
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          meetings:
            type: array
            description: List of Meeting objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  created_at:
                    type: string
                    description: Create time
                    format: date-time
                  duration:
                    type: integer
                    description: Meeting duration
                  host_id:
                    type: string
                    description: ID of the user set as host of meeting
                  id:
                    type: string
                    description: "Meeting ID, also know as meeting number"
                  join_url:
                    type: string
                    description: Join url
                  start_time:
                    type: string
                    description: Meeting start time
                    format: date-time
                  timezone:
                    type: string
                    description: Timezone to format start_time
                  topic:
                    type: string
                    description: Meeting topic
                  type:
                    type: integer
                    description: Meeting Type
                    x-enum-descriptions:
                    - Instant Meeting
                    - Scheduled Meeting
                    - Recurring Meeting with no fixed time
                    - Recurring Meeting with fixed time
                  uuid:
                    type: string
                    description: Meeting unique ID
    MeetingLiveStream:
      required:
      - stream_key
      - stream_url
      type: object
      properties:
        page_url:
          maxLength: 1024
          type: string
          description: View URL.
        stream_key:
          maxLength: 512
          type: string
          description: Stream name/key.
        stream_url:
          maxLength: 1024
          type: string
          description: Server URL.
      description: Meeting Live Stream
    MeetingLiveStreamStatus:
      type: object
      properties:
        action:
          type: string
          description: Action
          enum:
          - start
          - stop
          x-enum-descriptions:
          - Start a meeting live stream.
          - Stop a meeting live stream.
        settings:
          type: object
          properties:
            active_speaker_name:
              type: boolean
              description: Live stream active speaker name.
            display_name:
              maxLength: 50
              minLength: 1
              type: string
              description: Live stream display name.
      description: Meeting Live Stream Status
    MeetingMetric:
      title: Meeting Metrics
      type: object
      properties:
        duration:
          type: string
          description: Meeting duration
        email:
          type: string
          description: User email
        end_time:
          type: string
          description: Meeting end time
          format: date-time
        has_3rd_party_audio:
          type: boolean
          description: ""
        has_pstn:
          type: boolean
          description: ""
        has_recording:
          type: boolean
          description: ""
        has_screen_share:
          type: boolean
          description: ""
        has_sip:
          type: boolean
          description: ""
        has_video:
          type: boolean
          description: ""
        has_voip:
          type: boolean
          description: ""
        host:
          type: string
          description: User display name
        id:
          type: integer
          description: Meeting ID
        participants:
          type: integer
          description: Meeting participant count
        start_time:
          type: string
          description: Meeting start time
          format: date-time
        topic:
          type: string
          description: Meeting topic
        user_type:
          type: string
          description: User type
        uuid:
          type: string
          description: Meeting UUID
          format: uuid
      description: Meeting metric details
    MeetingRecordingRegistrantList:
      title: Registration List
      description: List of meeting recording registrant
      allOf:
      - $ref: '#/components/schemas/RecordingRegistrantList'
    MeetingRegistrant:
      description: Meeting registrant
      allOf:
      - $ref: '#/components/schemas/Registrant'
    MeetingRegistrantList:
      title: Registration List
      description: List of Users
      allOf:
      - $ref: '#/components/schemas/RegistrantList'
    MeetingSettings:
      type: object
      properties:
        alternative_hosts:
          type: string
          description: Alternative hosts emails or IDs. Multiple value separated by
            comma.
        approval_type:
          type: integer
          x-enum-descriptions:
          - Automatically Approve
          - Manually Approve
          - No Registration Required
        audio:
          type: string
          description: Determine how participants can join the audio portion of the
            meeting
          default: both
          enum:
          - both
          - telephony
          - voip
          x-enum-descriptions:
          - Both Telephony and VoIP
          - Telephony only
          - VoIP only
        auto_recording:
          type: string
          default: none
          enum:
          - local
          - cloud
          - none
          x-enum-descriptions:
          - Record to local device
          - Record to cloud
          - No Recording
        close_registration:
          type: boolean
          description: Close registration after event date
          default: false
        cn_meeting:
          type: boolean
          description: Host meeting in China
          default: false
        enforce_login:
          type: boolean
          description: Only signed-in users can join this meeting
        enforce_login_domains:
          type: string
          description: Only signed-in users with specified domains can join meetings
        host_video:
          type: boolean
          description: Start video when host joins meeting
        in_meeting:
          type: boolean
          description: Host meeting in India
          default: false
        join_before_host:
          type: boolean
          description: Allow participants to join the meeting before the host starts
            the meeting. Only used for scheduled or recurring meetings.
          default: false
        mute_upon_entry:
          type: boolean
          description: Mute participants upon entry
          default: false
        participant_video:
          type: boolean
          description: Start video when participants join meeting
        registration_type:
          type: integer
          description: Registration type. Used for recurring meeting with fixed time
            only.
          x-enum-descriptions:
          - Attendees register once and can attend any of the occurrences
          - Attendees need to register for each occurrence to attend
          - Attendees register once and can choose one or more occurrences to attend
        use_pmi:
          type: boolean
          description: Use Personal Meeting ID. Only used for scheduled meetings and
            recurring meetings with no fixed time.
          default: false
        waiting_room:
          type: boolean
          description: Enable waiting room
          default: false
        watermark:
          type: boolean
          description: Add watermark when viewing shared screen
          default: false
      description: Meeting Settings
    MeetingUpdate:
      description: Meeting object
      allOf:
      - $ref: '#/components/schemas/SessionUpdate'
    Occurrence:
      type: object
      properties:
        duration:
          type: integer
          description: Duration
        occurrence_id:
          type: integer
          description: Occurrence Id
        start_time:
          type: string
          description: Start time
          format: date-time
        status:
          type: string
          description: Occurrence status
      description: Occurence object
    Occurrences:
      type: array
      description: Array of occurrence objects
      items:
        $ref: '#/components/schemas/Occurrence'
    PAC:
      title: PAC Accounts List
      type: object
      properties:
        conference_id:
          type: integer
          description: Conference ID
        dedicated_dial_in_number:
          type: array
          description: List of Dedicated Dial In Numbers
          items:
            type: object
            properties:
              country:
                type: string
                description: Country Code
              number:
                type: string
                description: "Dial-in number, length is less than 16"
        global_dial_in_numbers:
          type: array
          description: List of Global Dial In Numbers
          items:
            type: object
            properties:
              country:
                type: string
                description: Country Code
              number:
                type: string
                description: "Dial-in number, length is less than 16"
        listen_only_password:
          type: string
          description: "Listen-Only Password, numeric value, length is less than 6"
        participant_password:
          type: string
          description: "Participant Password, numeric value, length is less than 6"
      description: List of PAC Accounts
    Pagination:
      type: object
      properties:
        page_count:
          type: integer
          description: The number of items returned on this page
        page_number:
          type: integer
          description: The page number of current results
        page_size:
          maximum: 300
          type: integer
          description: The number of records returned within a single API call
        total_records:
          type: integer
          description: The number of all records available across pages
      description: Pagination Object
    PaginationToken:
      type: object
      properties:
        next_page_token:
          type: string
          description: Next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results
            exceed the current page size. The expiration period for this token is
            15 minutes.
        page_count:
          type: integer
          description: The number of items returned on this page
        page_size:
          maximum: 300
          type: integer
          description: The number of records returned within a single API call.
        total_records:
          type: integer
          description: The number of all records available across pages
      description: Pagination Object
    PaginationToken4IMChat:
      type: object
      properties:
        next_page_token:
          type: string
          description: "Next page token, used to paginate through large result sets.\
            \ A next page token will be returned whenever the set of available result\
            \ list exceeds page size. The expiration period is 15 minutes."
        page_size:
          maximum: 300
          type: integer
          description: 'The amount of records returns within a single API call. '
      description: Pagination Object
    PaginationToken4Qos:
      type: object
      properties:
        next_page_token:
          type: string
          description: Next page token is used to paginate through large result sets.
            A next page token will be returned whenever the set of available results
            exceed the current page size. The expiration period for this token is
            15 minutes.
        page_count:
          type: integer
          description: The number of items returned on this page
          format: int64
        page_size:
          maximum: 10
          type: integer
          description: The number of items per page
        total_records:
          type: integer
          description: The number of all records available across pages
          format: int64
      description: Pagination Object
    Panelist:
      type: object
      properties:
        email:
          type: string
          description: Panelist's email
        name:
          type: string
          description: Panelist's full name
      description: Panelist base object
    PanelistList:
      title: Panelist List
      type: object
      properties:
        panelists:
          type: array
          description: List of Panelist objects
          items:
            type: object
            allOf:
            - type: object
              properties:
                id:
                  type: string
                  description: Panelist's ID
            - $ref: '#/components/schemas/Panelist'
            - type: object
              properties:
                join_url:
                  type: string
                  description: Join url
        total_records:
          type: integer
          description: Total records
      description: List of Panelist
    Poll:
      title: Poll
      type: object
      properties:
        questions:
          type: array
          description: Array of Polls
          items:
            type: object
            properties:
              answers:
                type: array
                description: Question answers
                items:
                  type: string
              name:
                type: string
                description: Question name
              type:
                type: string
                description: Question type
                enum:
                - single
                - multiple
                x-enum-descriptions:
                - single answer
                - multiple answer
        title:
          type: string
          description: Poll Title
      description: Poll
    PollList:
      title: Poll List
      description: Poll List
      allOf:
      - type: object
        properties:
          polls:
            type: array
            description: Array of Polls
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: ID of Poll
                  status:
                    type: string
                    description: Status of Poll
                    enum:
                    - notstart
                    - started
                    - ended
                    - sharing
                    x-enum-descriptions:
                    - Poll not start
                    - Poll started
                    - Poll ended
                    - Poll is sharing
              - $ref: '#/components/schemas/Poll'
          total_records:
            type: integer
            description: The number of all records available across pages
    QOSAudio:
      title: QOS Object
      type: object
      properties:
        avg_loss:
          type: string
          description: Average Loss
        bitrate:
          type: string
          description: Bitrate
        jitter:
          type: string
          description: Jitter
        latency:
          type: string
          description: Latency
        max_loss:
          type: string
          description: Max Loss
      description: Quality of Service object
    QOSParticipant:
      title: Participant QOS
      type: object
      properties:
        device:
          type: string
          description: Participant device
        domain:
          type: string
          description: Participant domain
        harddisk_id:
          type: string
          description: Participant hard disk id
        ip_address:
          type: string
          description: Participant IP Address
        join_time:
          type: string
          description: Participant join time
          format: date-time
        leave_time:
          type: string
          description: Participant leave time
          format: date-time
        location:
          type: string
          description: Participant location
        mac_addr:
          type: string
          description: Participant MAC Address
        pc_name:
          type: string
          description: Participant PC name
        user_id:
          type: string
          description: Participant ID
          format: uuid
        user_name:
          type: string
          description: Participant display name
        user_qos:
          type: object
          properties:
            as_input:
              $ref: '#/components/schemas/QOSVideo'
            as_output:
              $ref: '#/components/schemas/QOSVideo'
            audio_input:
              $ref: '#/components/schemas/QOSAudio'
            audio_output:
              $ref: '#/components/schemas/QOSAudio'
            cpu_usage:
              type: object
              properties:
                system_max_cpu_usage:
                  type: string
                  description: System Maximum CPU Usage
                zoom_avg_cpu_usage:
                  type: string
                  description: Zoom Average CPU Usage
                zoom_max_cpu_usage:
                  type: string
                  description: Zoom Maximum CPU Usage
                zoom_min_cpu_usage:
                  type: string
                  description: Zoom Minimum CPU Usage
            date_time:
              type: string
              description: Datetime of QOS
              format: date-time
            video_input:
              $ref: '#/components/schemas/QOSVideo'
            video_output:
              $ref: '#/components/schemas/QOSVideo'
          description: User quality of service
        version:
          type: string
          description: Participant version
      description: Participant QOS
    QOSParticipantList:
      title: Participant QOS List
      description: Participant QOS List
      allOf:
      - $ref: '#/components/schemas/PaginationToken4Qos'
      - type: object
        properties:
          participants:
            type: array
            description: Array of user objects
            items:
              $ref: '#/components/schemas/QOSParticipant'
    QOSVideo:
      title: QOS Object
      description: Quality of Service object
      allOf:
      - $ref: '#/components/schemas/QOSAudio'
      - type: object
        properties:
          frame_rate:
            type: string
            description: Frame Rate
          resolution:
            type: string
            description: Resolution
    Recording:
      type: object
      properties:
        deleted_time:
          type: string
          description: The recording delete time. Response in trash query.
        download_url:
          type: string
          description: The recording download url. Response in general query.
        file_size:
          type: number
          description: The recording file size.
        file_type:
          type: string
          description: The recording file type.
        id:
          type: string
          description: The recording file ID.Response in general query.
        meeting_id:
          type: string
          description: 'The meeting ID. '
        play_url:
          type: string
          description: The recording file play url. Response in general query.
        recording_end:
          type: string
          description: The recording end time. Response in general query.
        recording_start:
          type: string
          description: The recording start time.
        recording_type:
          type: string
          description: The recording file type.
        status:
          type: string
          description: The recording status. Response in general query.
      description: Recording file Object
    RecordingList:
      title: Recording file List
      description: List of Recording file
      allOf:
      - type: object
        properties:
          recording_files:
            title: Recording file List
            type: array
            description: List of Recording file
            items:
              type: object
              allOf:
              - $ref: '#/components/schemas/Recording'
    RecordingMeeting:
      description: The recording meeting object
      allOf:
      - type: object
        properties:
          account_id:
            type: string
            description: ID of the user account
          duration:
            type: integer
            description: Meeting duration
          host_id:
            type: string
            description: ID of the user set as host of meeting
          id:
            type: string
            description: "Meeting ID, also know as meeting number"
          recording_count:
            type: string
            description: Recording count
          start_time:
            type: string
            description: Meeting start time
            format: date-time
          topic:
            type: string
            description: Meeting topic
          total_size:
            type: string
            description: Total size
          uuid:
            type: string
            description: Meeting unique ID
      - $ref: '#/components/schemas/RecordingList'
    RecordingMeetingList:
      title: Recording List
      description: List of Recording
      allOf:
      - $ref: '#/components/schemas/DateTime'
      - $ref: '#/components/schemas/PaginationToken'
      - type: object
        properties:
          meetings:
            title: Recording List
            type: array
            description: List of Recording
            items:
              type: object
              allOf:
              - $ref: '#/components/schemas/RecordingMeeting'
    RecordingRegistrantList:
      title: Recording Registration List
      description: List of Recording Registration
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          registrants:
            type: array
            description: List of Registrant objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
              - $ref: '#/components/schemas/MeetingRegistrant'
    RecordingRegistrantStatus:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          enum:
          - approve
          - deny
          x-enum-descriptions:
          - Approve registrant
          - Deny registrant
        registrants:
          type: array
          description: List of registrants
          items:
            type: object
            properties:
              id:
                type: string
      description: Registrant Status
    RecordingSettings:
      title: Recording settings
      type: object
      properties:
        approval_type:
          type: integer
          description: Approval type
          x-enum-descriptions:
          - Registrants can watch the recording directly after registration
          - Registrants will receive emails then watch the recording after you approve
            the registration
          - Disabled
        on_demand:
          type: boolean
          description: Registration required
        password:
          type: string
          description: Password protect
        send_email_to_host:
          type: boolean
          description: Send an email to host when someone registers
        share_recording:
          type: string
          description: Determine if the meeting recording is shared
          enum:
          - publicly
          - internally
          - none
          x-enum-descriptions:
          - Publicly
          - Internally(account members only)
          - None
        show_social_share_buttons:
          type: boolean
          description: Show social share buttons on registration page
        viewer_download:
          type: boolean
          description: Host video
    Recurrence:
      type: object
      properties:
        end_date_time:
          type: string
          description: "Select a date the meeting will occur before it is canceled..\
            \ Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with\
            \ \"end_times\".)"
          format: date-time
        end_times:
          maximum: 50
          type: integer
          description: Select how many times the meeting will occur before it is canceled.
            (Cannot be used with "end_date_time".)
        monthly_day:
          type: integer
          description: Day of the month for the meeting to be scheduled. The value
            range is from 1 to 31.
        monthly_week:
          type: integer
          description: "Week for which the meeting should recur each month,"
          x-enum-descriptions:
          - Last week
          - First week
          - Second week
          - Third week
          - Fourth week
        monthly_week_day:
          type: integer
          description: Day for which the meeting should recur each month
          x-enum-descriptions:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
        repeat_interval:
          type: integer
          description: "At which interval should the meeting repeat? For a daily meeting,\
            \ max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly\
            \ meeting, max of 3 months."
        type:
          type: integer
          description: Recurrence meeting type
          x-enum-descriptions:
          - Daily
          - Weekly
          - Monthly
        weekly_days:
          type: integer
          description: "Days of the week the meeting should repeat, multiple values\
            \ separated by comma"
          x-enum-descriptions:
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      description: Recurrence object
    Registrant:
      required:
      - email
      - first_name
      - last_name
      type: object
      properties:
        address:
          type: string
          description: Address
        city:
          type: string
          description: City
        comments:
          type: string
          description: Questions & Comments
        country:
          type: string
          description: Country
        custom_questions:
          type: array
          description: Custom Questions
          items:
            $ref: '#/components/schemas/CustomQuestion'
        email:
          type: string
          description: A valid email address
        first_name:
          type: string
          description: User’s first name
        industry:
          type: string
          description: Industry
        job_title:
          type: string
          description: Job Title
        last_name:
          type: string
          description: User’s last name
        no_of_employees:
          type: string
          description: Number of Employees
          enum:
          - 1-20
          - 21-50
          - 51-100
          - 101-500
          - "500-1,000"
          - "1,001-5,000"
          - "5,001-10,000"
          - "More than 10,000"
        org:
          type: string
          description: Organization
        phone:
          type: string
          description: Phone
        purchasing_time_frame:
          type: string
          description: Purchasing Time Frame
          enum:
          - Within a month
          - 1-3 months
          - 4-6 months
          - More than 6 months
          - No timeframe
        role_in_purchase_process:
          type: string
          description: Role in Purchase Process
          enum:
          - Decision Maker
          - Evaluator/Recommender
          - Influencer
          - Not involved
        state:
          type: string
          description: State/Province
        zip:
          type: string
          description: Zip/Postal Code
      description: Registrant base object
    RegistrantList:
      title: Registration List
      description: List of Users
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          registrants:
            type: array
            description: List of Registrant objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
              - $ref: '#/components/schemas/MeetingRegistrant'
              - type: object
                properties:
                  create_time:
                    type: string
                    format: date-time
                  join_url:
                    type: string
                    format: string
                  status:
                    type: string
    RegistrantStatus:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          enum:
          - approve
          - cancel
          - deny
          x-enum-descriptions:
          - Approve registrant
          - Cancel registrant
          - Deny registrant
        registrants:
          type: array
          description: List of registrants
          items:
            type: object
            properties:
              email:
                type: string
              id:
                type: string
      description: Registrant Status
    Session:
      type: object
      properties:
        agenda:
          type: string
          description: Meeting description
        duration:
          type: integer
          description: Meeting duration (minutes). Used for scheduled meetings only
        password:
          type: string
          description: "Password to join the meeting. Password may only contain the\
            \ following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        settings:
          $ref: '#/components/schemas/MeetingSettings'
        start_time:
          type: string
          description: "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\
            , always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\"\
            , you should use local time and you will need to specify the time zone.\
            \ Only used for scheduled meetings and recurring meetings with fixed time."
          format: date-time
        timezone:
          type: string
          description: "Timezone to format start_time. For example, \"America/Los_Angeles\"\
            . For scheduled meetings only. Please reference our [timezone](#timezones)\
            \ list for supported timezones and their formats."
        topic:
          type: string
          description: Meeting topic
        tracking_fields:
          type: array
          description: Tracking fields
          items:
            type: object
            properties:
              field:
                type: string
                description: Tracking fields type
              value:
                type: string
                description: Tracking fields value
        type:
          type: integer
          description: Meeting Type
          x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      description: Base object for sessions
    SessionUpdate:
      type: object
      properties:
        agenda:
          type: string
          description: Meeting description
        duration:
          type: integer
          description: Meeting duration (minutes). Used for scheduled meetings only
        password:
          type: string
          description: "Password to join the meeting. Password may only contain the\
            \ following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        settings:
          type: object
          allOf:
          - $ref: '#/components/schemas/MeetingSettings'
          - type: object
            properties:
              registrants_confirmation_email:
                type: boolean
                description: Send confirmation Email to Registrants
        start_time:
          type: string
          description: "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\
            , always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\"\
            , you should use local time and you will need to specify the time zone.\
            \ Only used for scheduled meetings and recurring meetings with fixed time."
          format: date-time
        timezone:
          type: string
          description: "Timezone to format start_time. For example, \"America/Los_Angeles\"\
            . For scheduled meetings only. Please reference our [timezone](#timezones)\
            \ list for supported timezones and their formats."
        topic:
          type: string
          description: Meeting topic
        tracking_fields:
          type: array
          description: Tracking fields
          items:
            type: object
            properties:
              field:
                type: string
                description: Tracking fields type
              value:
                type: string
                description: Tracking fields value
        type:
          type: integer
          description: Meeting Type
          x-enum-descriptions:
          - Instant Meeting
          - Scheduled Meeting
          - Recurring Meeting with no fixed time
          - Recurring Meeting with fixed time
      description: Base object for sessions
    SessionWebinar:
      type: object
      properties:
        agenda:
          type: string
          description: Webinar description
        duration:
          type: integer
          description: Webinar duration (minutes). Used for scheduled webinar only
        password:
          type: string
          description: "Webinar password. Password may only contain the following\
            \ characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        settings:
          $ref: '#/components/schemas/WebinarSettings'
        start_time:
          type: string
          description: "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\
            , should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should\
            \ be local time, need to specify the time zone. Only used for scheduled\
            \ webinar and recurring webinar with fixed time."
          format: date-time
        timezone:
          type: string
          description: "Timezone to format start_time. For example, \"America/Los_Angeles\"\
            . For scheduled meetings only. Please reference our [timezone](#timezones)\
            \ list for supported timezones and their formats."
        topic:
          type: string
          description: Webinar topic
        tracking_fields:
          type: array
          description: Tracking fields
          items:
            type: object
            properties:
              field:
                type: string
                description: Tracking fields type
              value:
                type: string
                description: Tracking fields value
        type:
          type: integer
          description: Webinar Type
          x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      description: Base webinar object for sessions
    SessionWebinarUpdate:
      type: object
      properties:
        agenda:
          type: string
          description: Webinar description
        duration:
          type: integer
          description: Webinar duration (minutes). Used for scheduled webinar only
        password:
          type: string
          description: "Webinar password. Password may only contain the following\
            \ characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        settings:
          type: object
          allOf:
          - $ref: '#/components/schemas/WebinarSettings'
          - type: object
            properties:
              registrants_confirmation_email:
                type: boolean
                description: Send confirmation Email to Registrants
        start_time:
          type: string
          description: "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\
            , should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should\
            \ be local time, need to specify the time zone. Only used for scheduled\
            \ webinar and recurring webinar with fixed time."
          format: date-time
        timezone:
          type: string
          description: "Timezone to format start_time. For example, \"America/Los_Angeles\"\
            . For scheduled meetings only. Please reference our [timezone](#timezones)\
            \ list for supported timezones and their formats."
        topic:
          type: string
          description: Webinar topic
        tracking_fields:
          type: array
          description: Tracking fields
          items:
            type: object
            properties:
              field:
                type: string
                description: Tracking fields type
              value:
                type: string
                description: Tracking fields value
        type:
          type: integer
          description: Webinar Type
          x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      description: Base webinar object for sessions
    TSP:
      title: TSP Accounts List
      required:
      - conference_code
      - leader_pin
      type: object
      properties:
        conference_code:
          maxLength: 16
          minLength: 1
          type: string
          description: "Conference code, numeric value, length is less than 16."
        dial_in_numbers:
          type: array
          description: List of Dial In Numbers
          items:
            type: object
            properties:
              code:
                maxLength: 6
                type: string
                description: Country Code
              country_label:
                maxLength: 10
                type: string
                description: "Country Label, if passed, will display in place of code."
              number:
                maxLength: 16
                minLength: 1
                type: string
                description: "Dial-in number, length is less than 16."
              type:
                type: string
                description: Dial-in number type.
                enum:
                - toll
                - tollfree
                - media_link
                x-enum-descriptions:
                - Toll number <br/>
                - Toll free number <br/>
                - Media link phone number <br/>
        leader_pin:
          maxLength: 16
          minLength: 1
          type: string
          description: "Leader PIN, numeric value, length is less than 16."
      description: List of TSP Accounts
    TrackingField:
      title: Tracking Field
      type: object
      properties:
        field:
          type: string
          description: Tracking Field Name
        recommended_values:
          type: array
          description: Array of recommended values
          items:
            type: string
        required:
          type: boolean
          description: Tracking Field Required
        visible:
          type: boolean
          description: Tracking Field Visible
      description: Tracking Field
    TrackingFieldList:
      title: Tracking Field List
      description: Tracking Field List
      allOf:
      - type: object
        properties:
          total_records:
            type: integer
            description: The number of all records available across pages
          tracking_fields:
            type: array
            description: Array of Tracking Fields
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: ID of Tracking Field
              - $ref: '#/components/schemas/TrackingField'
    User:
      required:
      - email
      - type
      type: object
      properties:
        created_at:
          type: string
          description: User create time
          format: date-time
        dept:
          type: string
          description: Department
        email:
          type: string
          description: User's email address
        first_name:
          maxLength: 64
          type: string
          description: User's first name
        last_client_version:
          type: string
          description: User last login client version
        last_login_time:
          type: string
          description: User last login time
          format: date-time
        last_name:
          maxLength: 64
          type: string
          description: User's last name
        pmi:
          type: string
          description: Personal Meeting ID
        timezone:
          type: string
          description: Time Zone
        type:
          type: integer
          description: User's type
          x-enum-descriptions:
          - basic
          - pro
          - corp
      description: The user object represents a User on Zoom
    UserAssistantsList:
      title: User assistants List
      type: object
      properties:
        assistants:
          type: array
          description: List of User's assistants
          items:
            type: object
            properties:
              email:
                type: string
                description: "User email address. Must have id or email, if given\
                  \ id, the email is ignored."
              id:
                type: string
                description: User ID
      description: List of User's assistants
    UserList:
      title: User List
      description: List of Users
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          users:
            type: array
            description: List of User objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: User ID
              - $ref: '#/components/schemas/User'
              - type: object
                properties:
                  group_ids:
                    type: array
                    items:
                      type: string
                  im_group_ids:
                    type: array
                    items:
                      type: string
    UserPermissions:
      type: object
      properties:
        permissions:
          type: array
          description: List of user permissions
          items:
            type: string
      description: ""
    UserSchedulersList:
      title: User schedulers List
      type: object
      properties:
        assistants:
          type: array
          description: List of User's schedulers.
          items:
            type: object
            properties:
              email:
                type: string
                description: User email address.
              id:
                type: string
                description: User ID
      description: List of User's schedulers
    UserSettings:
      title: User settings
      type: object
      properties:
        email_notification:
          $ref: '#/components/schemas/UserSettingsEmailNotification'
        feature:
          $ref: '#/components/schemas/UserSettingsFeature'
        in_meeting:
          $ref: '#/components/schemas/UserSettingsInMeeting'
        recording:
          $ref: '#/components/schemas/UserSettingsRecording'
        schedule_meeting:
          $ref: '#/components/schemas/UserSettingsScheduleMeeting'
        telephony:
          $ref: '#/components/schemas/UserSettingsTelephony'
    UserSettingsEmailNotification:
      title: "User settings: Notification settings"
      type: object
      properties:
        alternative_host_reminder:
          type: boolean
          description: When an alternative host is set or removed from a meeting
          default: false
        cancel_meeting_reminder:
          type: boolean
          description: When a meeting is cancelled
          default: false
        jbh_reminder:
          type: boolean
          description: When attendees join meeting before host
          default: false
      description: ""
    UserSettingsFeature:
      title: "User settings: Feature settings"
      type: object
      properties:
        cn_meeting:
          type: boolean
          description: CN meeting feature
        in_meeting:
          type: boolean
          description: IN meeting feature
        large_meeting:
          type: boolean
          description: Large meting feature
        large_meeting_capacity:
          type: integer
          description: "Large meeting capacity, can be 100, 200, 300 or 500, depends\
            \ on if having related large meeting capacity plan subscription or not"
        meeting_capacity:
          type: integer
          description: User’s meeting capacity
        webinar:
          type: boolean
          description: Webinar feature
        webinar_capacity:
          type: integer
          description: "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000,\
            \ depends on if having related webinar capacity plan subscription or not"
      description: ""
    UserSettingsFeatureUpdate:
      title: "User settings: Feature settings"
      type: object
      properties:
        large_meeting:
          type: boolean
          description: Large meting feature
        large_meeting_capacity:
          type: integer
          description: "Large meeting capacity, can be 100, 200, 300 or 500, depends\
            \ on if having related large meeting capacity plan subscription or not"
        meeting_capacity:
          type: integer
          description: User’s meeting capacity
        webinar:
          type: boolean
          description: Webinar feature
        webinar_capacity:
          type: integer
          description: "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000,\
            \ depends on if having related webinar capacity plan subscription or not"
      description: ""
    UserSettingsInMeeting:
      title: "User settings: Meeting settings"
      type: object
      properties:
        allow_live_streaming:
          type: boolean
          description: Allow live streaming
        annotation:
          type: boolean
          description: Annotation
          default: false
        attendee_on_hold:
          type: boolean
          description: Allow host to put attendee on hold
          default: false
        attention_tracking:
          type: boolean
          description: Attention tracking
          default: false
        auto_saving_chat:
          type: boolean
          description: Auto saving chats
          default: false
        breakout_room:
          type: boolean
          description: Breakout room
          default: false
        chat:
          type: boolean
          description: Chat
          default: false
        closed_caption:
          type: boolean
          description: Closed caption
          default: false
        co_host:
          type: boolean
          description: Co-host
          default: false
        custom_live_streaming:
          type: boolean
          description: Custom live streaming
        custom_service_instructions:
          type: string
          description: Custom service instructions
        e2e_encryption:
          type: boolean
          description: End-to-end encryption
        entry_exit_chime:
          type: string
          description: Play sound on join/leave
          default: a''
          enum:
          - host
          - all
          - none
          x-enum-descriptions:
          - when host joins/leaves
          - when any participant joins/leaves
          - no join/leave sound
        far_end_camera_control:
          type: boolean
          description: Far end camera control
          default: false
        feedback:
          type: boolean
          description: Feedback to Zoom
          default: false
        file_transfer:
          type: boolean
          description: File transfer
          default: false
        group_hd:
          type: boolean
          description: Group HD video
          default: false
        non_verbal_feedback:
          type: boolean
          description: Non-verbal feedback
          default: false
        polling:
          type: boolean
          description: Polling
          default: false
        private_chat:
          type: boolean
          description: Private chat
          default: false
        record_play_voice:
          type: boolean
          description: Record and play their own voice
        remote_control:
          type: boolean
          description: Remote control
          default: false
        remote_support:
          type: boolean
          description: Remote support
          default: false
        share_dual_camera:
          type: boolean
          description: Share dual camera (Deprecated)
          default: false
        virtual_background:
          type: boolean
          description: Virtual background
          default: false
        waiting_room:
          type: boolean
          description: Waiting room
          default: false
        workplace_by_facebook:
          type: boolean
          description: Workplace by facebook
      description: ""
    UserSettingsRecording:
      title: "User settings: Recording settings"
      type: object
      properties:
        auto_delete_cmr:
          type: boolean
          description: Auto delete cloud recordings
          default: false
        auto_delete_cmr_days:
          maximum: 60
          minimum: 1
          type: integer
          description: A specified number of days of auto delete cloud recordings
        auto_recording:
          type: string
          description: Automatic recording
          default: local
          enum:
          - local
          - cloud
          - none
          x-enum-descriptions:
          - Record on local
          - Record on cloud
          - Disabled
        cloud_recording:
          type: boolean
          description: Cloud recording
          default: false
        local_recording:
          type: boolean
          description: Local recording
        record_audio_file:
          type: boolean
          description: Record an audio only file
          default: false
        record_gallery_view:
          type: boolean
          description: Record the gallery view
          default: false
        record_speaker_view:
          type: boolean
          description: Record the active speaker view
          default: false
        recording_audio_transcript:
          type: boolean
          description: Audio transcript
        save_chat_text:
          type: boolean
          description: Save chat text from the meeting
          default: false
        show_timestamp:
          type: boolean
          description: Show timestamp on video
          default: false
      description: ""
    UserSettingsScheduleMeeting:
      title: "User settings: Meeting settings"
      type: object
      properties:
        audio_type:
          type: string
          description: Determine how participants can join the audio portion of the
            meeting
          default: voip
          enum:
          - both
          - telephony
          - voip
          - thirdParty
          x-enum-descriptions:
          - Telephony and VoIP
          - Audio PSTN telephony only
          - VoIP only
          - 3rd party audio conference
        force_pmi_jbh_password:
          type: boolean
          description: Require a password for Personal Meetings if attendees can join
            before host
        host_video:
          type: boolean
          description: Host video
        join_before_host:
          type: boolean
          description: Join before host
        participants_video:
          type: boolean
          description: Participants video
        pstn_password_protected:
          type: boolean
          description: Generate and require password for participants joining by phone
      description: ""
    UserSettingsTelephony:
      title: "User settings: Meeting settings"
      type: object
      properties:
        audio_conference_info:
          maxLength: 2048
          type: string
          description: 3rd party audio conference info
          default: ""
        show_international_numbers_link:
          type: boolean
          description: Show international numbers link on the invitation email
        third_party_audio:
          type: boolean
          description: 3rd party audio conference
      description: ""
    UserSettingsUpdate:
      title: User settings
      type: object
      properties:
        email_notification:
          $ref: '#/components/schemas/UserSettingsEmailNotification'
        feature:
          $ref: '#/components/schemas/UserSettingsFeatureUpdate'
        in_meeting:
          $ref: '#/components/schemas/UserSettingsInMeeting'
        recording:
          $ref: '#/components/schemas/UserSettingsRecording'
        schedule_meeting:
          $ref: '#/components/schemas/UserSettingsScheduleMeeting'
        telephony:
          $ref: '#/components/schemas/UserSettingsTelephony'
    UserUpdate:
      type: object
      properties:
        cms_user_id:
          type: string
          description: Kaltura User Id
        dept:
          type: string
          description: "Department for user profile, use for report"
        first_name:
          maxLength: 64
          type: string
          description: User's first name. Cannot contain more than 5 Chinese words.
        host_key:
          maxLength: 6
          minLength: 6
          type: string
          description: "Host Key, should be 6-digit number"
        language:
          type: string
          description: language
        last_name:
          maxLength: 64
          type: string
          description: User's last name. Cannot contain more than 5 Chinese words.
        pmi:
          maxLength: 10
          minLength: 10
          type: string
          description: "Personal Meeting ID,length must be 10"
        timezone:
          type: string
          description: "The time zone id for user profile. For this parameter value\
            \ please refer to the id value in [timezone](#timezones) list."
          format: date-time
        type:
          type: integer
          description: User's type
          x-enum-descriptions:
          - basic
          - pro
          - corp
        use_pmi:
          type: boolean
          description: Use Personal Meeting ID for instant meetings.
          default: false
        vanity_name:
          type: string
          description: Personal meeting room name
      description: The user update object represents a User on Zoom
    Webhook:
      required:
      - auth_password
      - auth_user
      - events
      - url
      type: object
      properties:
        auth_password:
          maxLength: 64
          type: string
          description: Webhook auth password
        auth_user:
          maxLength: 128
          type: string
          description: Webhook auth user name
        events:
          type: array
          description: List of events objects.
          items:
            type: string
          x-enum-descriptions:
          - The meeting has started.
          - The meeting has ended.
          - Attendee has joined a meeting before the host.
          - "Host hasn’t launched the meeting, attendee is waiting."
          - All the Cloud Recordings have completed processing and is available.
          - Participant has joined the meeting.
          - Participant has leaved the meeting.
          - Attendee registered for a meeting or webinar.
          - Recording audio transcript files have processed and are available.
        url:
          maxLength: 256
          type: string
          description: Webhook endpoint
      description: "Webhook base object, only available for version 2 webhook"
    WebhookList:
      title: Webhook List
      description: List of Webhooks
      allOf:
      - type: object
        properties:
          total_records:
            type: integer
            description: The number of all records available across pages
          webhooks:
            type: array
            description: List of Webhook objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  webhook_id:
                    type: string
                    description: Webhook Id
              - $ref: '#/components/schemas/Webhook'
              - type: object
                properties:
                  created_at:
                    type: string
                    description: Webhook create time
                    format: date-time
    WebhookUpdate:
      type: object
      properties:
        auth_password:
          maxLength: 64
          type: string
          description: Webhook auth password
        auth_user:
          maxLength: 128
          type: string
          description: Webhook auth user name
        events:
          type: array
          description: List of events objects
          items:
            type: string
          x-enum-descriptions:
          - The meeting has started.
          - The meeting has ended.
          - Attendee has joined a meeting before the host.
          - "Host hasn’t launched the meeting, attendee is waiting."
          - All the Cloud Recordings has completed processing and is available.
          - Participant has joined the meeting.
          - Participant has leaved the meeting.
          - Attendee registered for a meeting or webinar.
          - Recording audio transcript files have processed and are available.
        url:
          maxLength: 256
          type: string
          description: Webhook endpoint
      description: Webhook base object
    Webinar:
      description: Webinar object
      allOf:
      - $ref: '#/components/schemas/SessionWebinar'
    WebinarInfo:
      type: object
      properties:
        agenda:
          type: string
          description: Webinar agenda
        created_at:
          type: string
          description: Create time
          format: date-time
        duration:
          type: integer
          description: Webinar duration
        join_url:
          type: string
          description: Join url
        occurrences:
          $ref: '#/components/schemas/Occurrences'
        settings:
          $ref: '#/components/schemas/WebinarSettings'
        start_time:
          type: string
          description: Webinar start time
          format: date-time
        start_url:
          type: string
          description: Start url
        timezone:
          type: string
          description: Timezone to format start_time
        topic:
          type: string
          description: Webinar topic
        tracking_fields:
          type: array
          description: Tracking fields
          items:
            type: object
            properties:
              field:
                type: string
                description: Tracking fields type
              value:
                type: string
                description: Tracking fields value
        type:
          type: integer
          description: Webinar Type
          x-enum-descriptions:
          - Webinar
          - Recurring Webinar with no fixed time
          - Recurring Webinar with fixed time
      description: Webinar object
    WebinarInstances:
      title: Webinar instances
      description: List of Webinars
      allOf:
      - type: object
        properties:
          webinars:
            type: array
            description: List of ended webinar instances.
            items:
              type: object
              allOf:
              - type: object
                properties:
                  start_time:
                    type: string
                    description: Start time
                    format: date-time
                  uuid:
                    type: string
                    description: WebinarUUID
    WebinarList:
      title: User List
      description: List of Webinars
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          webinars:
            type: array
            description: List of Webinar objects
            items:
              type: object
              allOf:
              - type: object
                properties:
                  created_at:
                    type: string
                    description: Create time
                    format: date-time
                  duration:
                    type: integer
                    description: Meeting duration
                  host_id:
                    type: string
                    description: ID of the user set as host of webinar
                  id:
                    type: string
                    description: "Webinar ID, also know as webinar number"
                  join_url:
                    type: string
                    description: Join url
                  timezone:
                    type: string
                    description: Timezone to format start_time
                  topic:
                    type: string
                    description: Meeting topic
                  type:
                    type: integer
                    description: Meeting Type
                    x-enum-descriptions:
                    - Webinar
                    - Recurring Webinar with no fixed time
                    - Recurring Webinar with fixed time
                  uuid:
                    type: string
                    description: Webinar unique ID
    WebinarMetric:
      title: Webinar Metrics
      type: object
      properties:
        duration:
          type: string
          description: Webinar duration
        email:
          type: string
          description: User email
        end_time:
          type: string
          description: Webinar end time
          format: date-time
        has_3rd_party_audio:
          type: boolean
          description: ""
        has_pstn:
          type: boolean
          description: ""
        has_recording:
          type: boolean
          description: ""
        has_screen_share:
          type: boolean
          description: ""
        has_sip:
          type: boolean
          description: ""
        has_video:
          type: boolean
          description: ""
        has_voip:
          type: boolean
          description: ""
        host:
          type: string
          description: User display name
        id:
          type: integer
          description: Webinar ID
        participants:
          type: integer
          description: Webinar participant count
        start_time:
          type: string
          description: Webinar start time
          format: date-time
        topic:
          type: string
          description: Webinar topic
        user_type:
          type: string
          description: User type
        uuid:
          type: string
          description: Webinar UUID
          format: uuid
      description: Webinar metric details
    WebinarPanelist:
      type: object
      properties:
        panelists:
          type: array
          description: List of Panelist objects
          items:
            type: object
            allOf:
            - $ref: '#/components/schemas/Panelist'
      description: Webinar panelist
    WebinarPanelistList:
      description: Webinar panelist
      allOf:
      - $ref: '#/components/schemas/PanelistList'
    WebinarRegistrant:
      description: Webianr registrant
      allOf:
      - $ref: '#/components/schemas/Registrant'
    WebinarRegistrantList:
      title: Registration List
      description: List of Users
      allOf:
      - $ref: '#/components/schemas/RegistrantList'
    WebinarSettings:
      type: object
      properties:
        allow_multiple_devices:
          type: boolean
          description: Allow attendees to join from multiple devices
        alternative_hosts:
          type: string
          description: Alternative hosts emails or IDs. Multiple values separated
            by comma.
        approval_type:
          type: integer
          x-enum-descriptions:
          - Automatically Approve
          - Manually Approve
          - No Registration Required
        audio:
          type: string
          description: Determine how participants can join the audio portion of the
            meeting
          default: both
          enum:
          - both
          - telephony
          - voip
          x-enum-descriptions:
          - Both Telephony and VoIP
          - Telephony only
          - VoIP only
        auto_recording:
          type: string
          default: none
          enum:
          - local
          - cloud
          - none
          x-enum-descriptions:
          - Record to local device
          - Record to cloud
          - No Recording
        close_registration:
          type: boolean
          description: Close registration after event date
        enforce_login:
          type: boolean
          description: Only signed-in users can join this meeting
        enforce_login_domains:
          type: string
          description: Only signed-in users with specified domains can join meetings
        hd_video:
          type: boolean
          description: Default to HD Video
          default: false
        host_video:
          type: boolean
          description: Start video when host joins webinar
        on_demand:
          type: boolean
          description: Make the webinar on-demand
          default: false
        panelists_video:
          type: boolean
          description: Start video when panelists join webinar
        practice_session:
          type: boolean
          description: Enable Practice Session
          default: false
        registration_type:
          type: integer
          description: Registration type. Used for recurring webinar with fixed time
            only.
          x-enum-descriptions:
          - Attendees register once and can attend any of the occurrences
          - Attendees need to register for each occurrence to attend
          - Attendees register once and can choose one or more occurrences to attend
        show_share_button:
          type: boolean
          description: Show social share buttons on registration page
      description: Webinar Settings
    WebinarUpdate:
      description: Webinar object
      allOf:
      - $ref: '#/components/schemas/SessionWebinarUpdate'
    ZoomRoom:
      title: Zoom Room
      type: object
      properties:
        account_type:
          type: string
          description: Zoom Room email type
        calender_name:
          type: string
          description: Zoom Calendar name
        camera:
          type: string
          description: Zoom Room camera
        device_ip:
          type: string
          description: Zoom Room device IP
        email:
          type: string
          description: Zoom Room email
        id:
          type: string
          description: Zoom Room ID
        last_start_time:
          type: string
          description: Zoom Room last start time
        microphone:
          type: string
          description: Zoom Room microphone
        room_name:
          type: string
          description: Zoom Room name
        speaker:
          type: string
          description: Zoom Room speaker
        status:
          type: string
          description: Zoom Room status
      description: Zoom Room
    ZoomRoomList:
      title: Zoom Room List
      description: Zoom Room List
      allOf:
      - $ref: '#/components/schemas/Pagination'
      - type: object
        properties:
          zoom_rooms:
            type: array
            description: Array of Zoom Rooms
            items:
              $ref: '#/components/schemas/ZoomRoom'
  parameters:
    AccountId:
      name: accountId
      in: path
      description: The account ID
      required: true
      schema:
        type: string
    DeviceId:
      name: deviceId
      in: path
      description: The device ID
      required: true
      schema:
        type: string
    FromDate:
      name: from
      in: query
      description: Start Date
      required: true
      schema:
        type: string
        format: date
    GroupId:
      name: groupId
      in: path
      description: The group ID
      required: true
      schema:
        type: string
    LoginType:
      name: login_type
      in: query
      schema:
        type: string
        enum:
        - "0"
        - "1"
        - "99"
        - "100"
        - "101"
        x-enum-descriptions:
        - Facebook
        - Google
        - API
        - Zoom
        - SSO
      x-enum-descriptions:
      - Facebook
      - Google
      - API
      - Zoom
      - SSO
    Mc:
      name: mc
      in: query
      description: 'Query mc '
      schema:
        type: string
        default: "false"
    MeetingId:
      name: meetingId
      in: path
      description: The meeting ID
      required: true
      schema:
        type: integer
    MeetingId4Metrics:
      name: meetingId
      in: path
      description: "The meeting ID or meeting UUID. If given meeting ID, will take\
        \ the last meeting instance."
      required: true
      schema:
        type: string
    MeetingId4Recording:
      name: meetingId
      in: path
      description: "The meeting ID or meeting UUID. If given meeting ID, will take\
        \ the last meeting instance."
      required: true
      schema:
        type: string
    MeetingIdNumber:
      name: meetingId
      in: path
      description: The meeting ID or uuid
      required: true
      schema:
        type: string
    MeetingType:
      name: type
      in: query
      description: The meeting type
      schema:
        type: string
        default: live
        enum:
        - scheduled
        - live
        - upcoming
        x-enum-descriptions:
        - all the scheduled meetings
        - all the live meetings
        - all the upcoming meetings
      x-enum-descriptions:
      - all the scheduled meetings
      - all the live meetings
      - all the upcoming meetings
    MeetingTypePast:
      name: type
      in: query
      description: The meeting type
      schema:
        type: string
        default: live
        enum:
        - past
        - pastOne
        - live
        x-enum-descriptions:
        - past meetings
        - past one user meetings
        - live meetings
      x-enum-descriptions:
      - past meetings
      - past one user meetings
      - live meetings
    MeetingTypePast2:
      name: type
      in: query
      description: The meeting type
      schema:
        type: string
        default: live
        enum:
        - past
        - live
        x-enum-descriptions:
        - past meeting
        - live meeting
      x-enum-descriptions:
      - past meeting
      - live meeting
    MeetingTypePast3:
      name: type
      in: query
      description: The meeting type
      schema:
        type: string
        default: live
        enum:
        - past
        - pastOne
        - live
        x-enum-descriptions:
        - past meeting
        - past one user meeting
        - live meeting
      x-enum-descriptions:
      - past meeting
      - past one user meeting
      - live meeting
    MeetingUUID:
      name: meetingUUID
      in: path
      description: The meeting UUID.
      required: true
      schema:
        type: string
    MemberId:
      name: memberId
      in: path
      description: The member ID
      required: true
      schema:
        type: string
    NextPageToken:
      name: next_page_token
      in: query
      description: Next page token is used to paginate through large result sets.
        A next page token will be returned whenever the set of available results exceed
        the current page size. The expiration period for this token is 15 minutes.
      schema:
        type: string
    OccurrenceId:
      name: occurrence_id
      in: query
      description: The meeting occurrence ID
      schema:
        type: string
    PageNumber:
      name: page_number
      in: query
      description: Current page number of returned records
      schema:
        type: integer
        default: 1
    PageSize:
      name: page_size
      in: query
      description: The number of records returned within a single API call
      schema:
        maximum: 300
        type: integer
        default: 30
    PageSize4Qos:
      name: page_size
      in: query
      description: Number of items returned per page
      schema:
        maximum: 10
        type: integer
        default: 1
    PageToken:
      name: next_page_token
      in: query
      description: Next page token is used to paginate through large result sets.
        A next page token will be returned whenever the set of available results exceed
        the current page size. The expiration period for this token is 15 minutes.
      schema:
        type: string
    ParticipantId:
      name: participantId
      in: path
      description: Participant ID
      required: true
      schema:
        type: string
    RecordingDeleteAction:
      name: action
      in: query
      description: The recording delete action
      schema:
        type: string
        default: trash
        enum:
        - trash
        - delete
        x-enum-descriptions:
        - move recording to trash
        - delete recording permanently
      x-enum-descriptions:
      - move recording to trash
      - delete recording permanently
    RecordingId:
      name: recordingId
      in: path
      description: The recording ID
      required: true
      schema:
        type: string
    RegistrantId:
      name: registrantId
      in: path
      description: The registrant ID
      required: true
      schema:
        type: string
    RegistrantStatus:
      name: status
      in: query
      description: The registrant status
      schema:
        type: string
        default: approved
        enum:
        - pending
        - approved
        - denied
        x-enum-descriptions:
        - registrants status is pending
        - registrants status is approved
        - registrants status is denied
      x-enum-descriptions:
      - registrants status is pending
      - registrants status is approved
      - registrants status is denied
    SessionId:
      name: sessionId
      in: path
      description: IM Chat Session ID
      required: true
      schema:
        type: string
    TSPId:
      name: tspId
      in: path
      description: TSP account index
      required: true
      schema:
        type: string
    ToDate:
      name: to
      in: query
      description: End Date
      required: true
      schema:
        type: string
        format: date
    TransferEmail:
      name: transfer_email
      in: query
      description: Transfer email
      schema:
        type: string
    TransferMeeting:
      name: transfer_meeting
      in: query
      description: Transfer meeting
      schema:
        type: boolean
    TransferRecording:
      name: transfer_recording
      in: query
      description: Transfer recording
      schema:
        type: boolean
    TransferWebinar:
      name: transfer_webinar
      in: query
      description: Transfer webinar
      schema:
        type: boolean
    Trash:
      name: trash
      in: query
      description: 'Query trash '
      schema:
        type: boolean
        default: false
    UserId:
      name: userId
      in: path
      description: The user ID or email address
      required: true
      schema:
        type: string
    WebhookId:
      name: webhookId
      in: path
      description: The webhook ID
      required: true
      schema:
        type: string
    WebinarId:
      name: webinarId
      in: path
      description: The webinar ID
      required: true
      schema:
        type: integer
    WebinarId4Metrics:
      name: webinarId
      in: path
      description: "The webinar ID or webinar UUID. If given webinar ID, will take\
        \ the last webinar instance."
      required: true
      schema:
        type: string
    WebinarTypePast:
      name: type
      in: query
      description: The webinar type
      schema:
        type: string
        default: live
        enum:
        - past
        - pastOne
        - live
        x-enum-descriptions:
        - past meetings
        - past one user meetings
        - live meetings
      x-enum-descriptions:
      - past meetings
      - past one user meetings
      - live meetings
    WebinarTypePast2:
      name: type
      in: query
      description: The webinar type
      schema:
        type: string
        default: live
        enum:
        - past
        - live
        x-enum-descriptions:
        - past webinar
        - live webinar
      x-enum-descriptions:
      - past webinar
      - live webinar
    ZoomRoomId:
      name: zoomroomId
      in: path
      description: The Zoom Room ID
      required: true
      schema:
        type: string
  securitySchemes:
    global:
      type: apiKey
      name: access_token
      in: query
x-explorer-enabled: false
x-original-swagger-version: "2.0"